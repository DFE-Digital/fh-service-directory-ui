{"version":3,"sources":["tmp/js/components/analytics.js","tmp/js/components/cookie-functions.js","tmp/js/components/helpers.js","tmp/js/components/cookie-banner.js","tmp/js/components/cookies-page.js","tmp/js/app.js"],"names":["gtag","command","args","window","dataLayer","push","arguments","GaMeasurementId","initAnalytics","gaMeasurementId","Boolean","setDefaultConsent","loadGaScript","Date","pageViewParams","getPiiSafePageView","send_page_view","page_path","page_location","page_referrer","referrer","cookie_flags","analytics_storage","updateAnalyticsStorageConsent","granted","sendPageViewEvent","sendFilterPageCustomEvent","element","document","getElementById","totalResults","getAttribute","undefined","total_results","sendAnalyticsCustomEvent","accepted","source","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","pageView","page_title","title","send_to","piiSafeReferrerQueryString","getPiiSafeQueryString","URL","search","urlArray","split","piiSafeQueryString","location","href","pathname","queryString","queryParams","URLSearchParams","postcode","get","replace","set","delete","toString","CONSENT_COOKIE_NAME","COOKIE_CATEGORIES","analytics","GA_CONTAINER_ID","essential","DEFAULT_COOKIE_CONSENT","Cookie","name","value","options","getCookie","deleteCookie","days","setCookie","getConsentCookie","consentCookieObj","consentCookie","JSON","parse","err","isValidConsentCookie","version","GDS_CONSENT_COOKIE_VERSION","setConsentCookie","cookieConsent","option","stringify","resetCookies","cookieType","forEach","cookie","userAllowsCookieCategory","cookieCategory","cookiePreferences","e","console","error","userAllowsCookie","cookieName","category","indexOf","nameEQ","cookies","i","len","length","charAt","substring","decodeURIComponent","cookieString","date","setTime","getTime","toUTCString","protocol","hostname","nodeListForEach","nodes","callback","NodeList","prototype","call","cookieBannerAcceptSelector","cookieBannerRejectSelector","cookieBannerHideButtonSelector","cookieMessageSelector","cookieConfirmationAcceptSelector","cookieConfirmationRejectSelector","CookieBanner","$module","this","CookiesPage","init","$cookieBanner","$acceptButton","querySelector","$rejectButton","$cookieMessage","$cookieConfirmationAccept","$cookieConfirmationReject","$cookieBannerHideButtons","querySelectorAll","onCookiesPage","currentConsentCookie","CookieFunctions.getConsentCookie","CookieFunctions.isValidConsentCookie","CookieFunctions.resetCookies","removeAttribute","addEventListener","acceptCookies","bind","rejectCookies","$cookieBannerHideButton","hideBanner","setAttribute","CookieFunctions.setConsentCookie","revealConfirmationMessage","confirmationMessage","focus","$cookiePage","$cookieForm","$cookieFormFieldsets","$successNotification","$successLink","$cookieFormFieldset","showUserPreference","savePreferences","event","preventDefault","preferences","getCookieType","selectedItem","showSuccessNotification","preference","radioValue","checked","scrollTo","id","GA_MEASUREMENT_ID","userConsent","$cookiesPage","backLinks","link","history","back","button","filterButton","style","display"],"mappings":"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","file":"app.js","sourcesContent":["function gtag(command, ...args) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push(arguments);\n}\nlet GaMeasurementId = '';\n//todo: use prototype? (or class?)\n//todo: initAnalytics will have to be called irrespective of the current accept/decline cookie status\nexport default function initAnalytics(gaMeasurementId) {\n    // if the environment doesn't have a measurement id, don't load analytics\n    if (!Boolean(gaMeasurementId)) {\n        return;\n    }\n    GaMeasurementId = gaMeasurementId;\n    setDefaultConsent();\n    loadGaScript(gaMeasurementId);\n    gtag('js', new Date());\n    const pageViewParams = getPiiSafePageView(gaMeasurementId);\n    // set the config for auto generated events other than page_view\n    gtag('config', gaMeasurementId, {\n        send_page_view: false,\n        page_path: pageViewParams.page_path,\n        page_location: pageViewParams.page_location,\n        page_referrer: pageViewParams.referrer,\n        cookie_flags: 'secure'\n    });\n}\nfunction setDefaultConsent() {\n    gtag('consent', 'default', {\n        'analytics_storage': 'denied'\n    });\n    gtag('set', 'url_passthrough', true);\n}\nexport function updateAnalyticsStorageConsent(granted) {\n    gtag('consent', 'update', {\n        'analytics_storage': granted ? 'granted' : 'denied'\n    });\n}\nexport function sendPageViewEvent() {\n    // send the page_view event manually (https://developers.google.com/analytics/devguides/collection/gtagjs/pages#default_behavior)\n    gtag('event', 'page_view', getPiiSafePageView(GaMeasurementId));\n}\nexport function sendFilterPageCustomEvent() {\n    //todo: make filter page only\n    const element = document.getElementById('results');\n    const totalResults = element === null || element === void 0 ? void 0 : element.getAttribute('data-total-results');\n    if (totalResults === undefined)\n        return;\n    gtag('event', 'filter_page', {\n        'total_results': totalResults\n    });\n}\n//todo: or accepted|rejected\nexport function sendAnalyticsCustomEvent(accepted, source) {\n    gtag('event', 'analytics', {\n        'accepted': accepted,\n        'source': source\n    });\n}\n//todo: having an object (prototype/class) will ensure that GaMeasurementId will have already been set\nexport function disableAnalytics() {\n    //gtag('config', GaMeasurementId, {\n    //    'allow_ad_personalization_signals': false,\n    //    'allow_google_signals': false,\n    //    'scroll_threshold': 0,\n    //    'link_attribution': false\n    //});\n    //gtag('set', {\n    //    'allow_google_signals': false,\n    //    'custom_map': {\n    //        'scroll': 'non_interaction'\n    //    }\n    //});\n    // this kills our custom event, but not ga4's own events which must be caching the measurement id\n    //window.dataLayer = [];\n    //gtag('config', '');\n    //todo: when get working, ensure our own custom events and manual page_view events are not sent\n    // in theory these should be enough to disable analytics. has it already checked these at load time rather than at send time?\n    //window['ga-disable-' + GaMeasurementId] = true;\n    //window[\"_gaUserPrefs\"] = { ioo() { return true; } }\n    //possible options\n    // send the custom event without loading the gtag script. possible?? not easily, and not maintainable\n    // blatt the measurement id in the config? doesn't work - caching?\n    // replace a central function in the gtag script? not maintainable?\n    // issues:\n    // gtag operates async, so how do we know when it's sent the custom event\n    // we don't want a race condition (if we can disable ga4)\n    // could use a promise\n    // or could use a callback: https://developers.google.com/tag-platform/gtagjs/reference/parameters\n    //window.dataLayer.push({\n    //    'event': 'ga-disable',\n    //    'ga-disable': true\n    //});\n    //todo: unload the loaded script??\n    //    const gtagScript = document.querySelector('script[src^=\"https://www.googletagmanager.com/gtag/js\"]');\n    //    if (gtagScript) {\n    //        gtagScript.remove();\n    //    }\n    //}; aa.sl = function (a) { var b = this, c = TA(a); c ? Mh(c, function (d) { b.Eg(a, 1 === d.split(\"~\").length ? void 0 : d) }) : this.Eg(a) }; var WB = function (a, b, c) { var d = a + \"?\" + b; Lk(\"Sending request: \" + d); if (c) { Lk(\"  Request body: \" + c); try { oc.sendBeacon && oc.sendBeacon(d, c) } catch (e) { xb(\"TAGGING\", 15) } } else Fc(d) }, bC = Qm('', 500), cC = Qm('',\n    //    5E3), aC = !0; var dC = window, eC = document, fC = function (a) { var b = dC._gaUserPrefs; if (b && b.ioo && b.ioo() || a && !0 === dC[\"ga-disable-\" + a]) return !0; try { var c = dC.external; if (c && c._gaUserPrefs && \"oo\" == c._gaUserPrefs) return !0 } catch (f) { } for (var d = Uk(\"AMP_TOKEN\", String(eC.cookie), !0), e = 0; e < d.length; e++)if (\"$OPT_OUT\" == d[e]) return !0; return eC.getElementById(\"__gaOptOutExtension\") ? !0 : !1 };\n    /*\n    \r\n    function (a) { var b = dC._gaUserPrefs; if (b && b.ioo && b.ioo() || a && !0 === dC[\"ga-disable-\" + a]) return !0;\n    \r\n        function (a)\n        var dC = window\n            !0 === dC[\"ga-disable-\" + a]) return !0\n    \r\n            chat-gpt's interpretation of the code...\n    \r\n    This is a function in Google Analytics 4 (GA4) that is used to check if tracking is enabled or disabled for a specific user.\n    \r\n    Here's what the code is doing:\n    \r\n    The function takes an argument a which represents the tracking ID (or \"measurement ID\" in GA4 terminology) for the Google Analytics property being tracked.\n    The function then checks if the user has enabled or disabled tracking for themselves. This is done by checking a variable called _gaUserPrefs which is set by the user's browser.\n    If _gaUserPrefs is defined and has a method called ioo that returns true, it means the user has disabled tracking for themselves. The function returns true to indicate that tracking is disabled.\n    If the a argument is provided and there is a cookie called \"ga-disable-[measurement ID]\" that is set to true, it means the user has explicitly disabled tracking for that particular property. The function returns true to indicate that tracking is disabled.\n    If neither of the above conditions are met, the function returns false to indicate that tracking is enabled for the user.\n    Overall, this function is used to determine if tracking is enabled or disabled for a specific user in GA4, based on the user's preferences and any explicit settings they may have set.\n    \r\n    setting a property on window doesn't create a cookie, chat-gpt was hallucinating\n    \r\n            */\n}\nfunction loadGaScript(gaMeasurementId) {\n    const f = document.getElementsByTagName('script')[0];\n    const j = document.createElement('script');\n    j.async = true;\n    j.src = 'https://www.googletagmanager.com/gtag/js?id=' + gaMeasurementId;\n    f.parentNode.insertBefore(j, f);\n}\nfunction getPiiSafePageView(gaMeasurementId) {\n    const pageView = {\n        page_title: document.title,\n        send_to: gaMeasurementId,\n        referrer: '',\n        page_location: '',\n        page_path: ''\n    };\n    //todo: set as referrer or page_referrer in pageView - does it matter? is it only picking it up from the config?\n    //todo: get piisafe referrer function\n    if (document.referrer !== '') {\n        const referrerUrl = new URL(document.referrer);\n        const piiSafeReferrerQueryString = getPiiSafeQueryString(referrerUrl.search);\n        if (piiSafeReferrerQueryString == null) {\n            pageView.referrer = document.referrer;\n        }\n        else {\n            const urlArray = document.referrer.split(\"?\");\n            pageView.referrer = urlArray[0] + piiSafeReferrerQueryString;\n        }\n    }\n    const piiSafeQueryString = getPiiSafeQueryString(window.location.search);\n    if (piiSafeQueryString == null) {\n        pageView.page_location = window.location.href;\n        pageView.page_path = window.location.pathname + window.location.search;\n        return pageView;\n    }\n    const urlArray = window.location.href.split(\"?\");\n    pageView.page_location = urlArray[0] + piiSafeQueryString;\n    pageView.page_path = window.location.pathname + piiSafeQueryString;\n    return pageView;\n}\nfunction getPiiSafeQueryString(queryString) {\n    //todo: for safety, convert to lowercase, so that if the user changes the case of the url, we still don't collect pii\n    const queryParams = new URLSearchParams(queryString);\n    let postcode = queryParams.get(\"postcode\");\n    if (postcode == null) {\n        // null indicates original query params were already pii safe\n        return null;\n    }\n    postcode = postcode.replace(/[a-zA-Z]+$/, \"\");\n    queryParams.set(\"postcode\", postcode);\n    queryParams.delete(\"latitude\");\n    queryParams.delete(\"longitude\");\n    return '?' + queryParams.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\n * Cookie functions\n * ================\n *\n * Used by the cookie banner component and cookies page pattern.\n *\n * Includes function `Cookie()` for getting, setting, and deleting cookies, and\n * functions to manage the users' consent to cookies.\n *\n * Note: there is an inline script in cookie-banner.njk to show the banner\n * as soon as possible, to avoid a high Cumulative Layout Shift (CLS) score.\n * The consent cookie version is defined in cookie-banner.njk\n */\nimport initAnalytics from './analytics.js';\n/* Name of the cookie to save users cookie preferences to. */\nvar CONSENT_COOKIE_NAME = 'service_directory_cookies_policy';\n/* Users can (dis)allow different groups of cookies. */\nvar COOKIE_CATEGORIES = {\n    analytics: ['_ga', '_ga_' + window.GA_CONTAINER_ID],\n    /* Essential cookies\n     *\n     * Essential cookies cannot be deselected, but we want our cookie code to\n     * only allow adding cookies that are documented in this object, so they need\n     * to be added here.\n     */\n    essential: ['service_directory_cookies_policy']\n};\n/*\n * Default cookie preferences if user has no cookie preferences.\n *\n * Note that this doesn't include a key for essential cookies, essential\n * cookies cannot be disallowed. If the object contains { essential: false }\n * this will be ignored.\n */\nvar DEFAULT_COOKIE_CONSENT = {\n    analytics: false\n};\n/*\n * Set, get, and delete cookies.\n *\n * Usage:\n *\n *   Setting a cookie:\n *   Cookie('hobnob', 'tasty', { days: 30 })\n *\n *   Reading a cookie:\n *   Cookie('hobnob')\n *\n *   Deleting a cookie:\n *   Cookie('hobnob', null)\n */\nexport function Cookie(name, value, options) {\n    if (typeof value !== 'undefined') {\n        if (value === false || value === null) {\n            deleteCookie(name);\n        }\n        else {\n            // Default expiry date of 30 days\n            if (typeof options === 'undefined') {\n                options = { days: 30 };\n            }\n            setCookie(name, value, options);\n        }\n    }\n    else {\n        return getCookie(name);\n    }\n}\n/** Return the user's cookie preferences.\n *\n * If the consent cookie is malformed, or not present,\n * returns null.\n */\nexport function getConsentCookie() {\n    var consentCookie = getCookie(CONSENT_COOKIE_NAME);\n    var consentCookieObj;\n    if (consentCookie) {\n        try {\n            consentCookieObj = JSON.parse(consentCookie);\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n    return consentCookieObj;\n}\n/** Check the cookie preferences object.\n *\n * If the consent object is not present, malformed, or incorrect version,\n * returns false, otherwise returns true.\n *\n * This is also duplicated in cookie-banner.njk - the two need to be kept in sync\n */\nexport function isValidConsentCookie(options) {\n    return (options && options.version >= window.GDS_CONSENT_COOKIE_VERSION);\n}\n/** Update the user's cookie preferences. */\nexport function setConsentCookie(options) {\n    var cookieConsent = getConsentCookie();\n    if (!cookieConsent) {\n        cookieConsent = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    // Merge current cookie preferences and new preferences\n    for (var option in options) {\n        cookieConsent[option] = options[option];\n    }\n    // Essential cookies cannot be deselected, ignore this cookie type\n    delete cookieConsent.essential;\n    cookieConsent.version = window.GDS_CONSENT_COOKIE_VERSION;\n    // Set the consent cookie\n    setCookie(CONSENT_COOKIE_NAME, JSON.stringify(cookieConsent), { days: 365 });\n    // Update the other cookies\n    resetCookies();\n}\n/** Apply the user's cookie preferences\n *\n * Deletes any cookies the user has not consented to.\n */\nexport function resetCookies() {\n    var options = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(options)) {\n        options = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    for (var cookieType in options) {\n        if (cookieType === 'version') {\n            continue;\n        }\n        // Essential cookies cannot be deselected, ignore this cookie type\n        if (cookieType === 'essential') {\n            continue;\n        }\n        //todo: enabling analytics doesn't belong in resetCookies\n        //const analyticsAllowed = (cookieType === 'analytics' && options[cookieType]);\n        //if (analyticsAllowed) {\n        //    initAnalytics(window.GA_MEASUREMENT_ID);\n        //}\n        if (!options[cookieType]) {\n            // Fetch the cookies in that category\n            var cookiesInCategory = COOKIE_CATEGORIES[cookieType];\n            cookiesInCategory.forEach(function (cookie) {\n                // Delete cookie\n                Cookie(cookie, null);\n            });\n        }\n    }\n}\nfunction userAllowsCookieCategory(cookieCategory, cookiePreferences) {\n    // Essential cookies are always allowed\n    if (cookieCategory === 'essential') {\n        return true;\n    }\n    // Sometimes cookiePreferences is malformed in some of the tests, so we need to handle these\n    try {\n        return cookiePreferences[cookieCategory];\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n}\nfunction userAllowsCookie(cookieName) {\n    // Always allow setting the consent cookie\n    if (cookieName === CONSENT_COOKIE_NAME) {\n        return true;\n    }\n    // Get the current cookie preferences\n    var cookiePreferences = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(cookiePreferences)) {\n        cookiePreferences = DEFAULT_COOKIE_CONSENT;\n    }\n    for (var category in COOKIE_CATEGORIES) {\n        var cookiesInCategory = COOKIE_CATEGORIES[category];\n        if (cookiesInCategory.indexOf(cookieName) !== '-1') {\n            return userAllowsCookieCategory(category, cookiePreferences);\n        }\n    }\n    // Deny the cookie if it is not known to us\n    return false;\n}\nfunction getCookie(name) {\n    var nameEQ = name + '=';\n    var cookies = document.cookie.split(';');\n    for (var i = 0, len = cookies.length; i < len; i++) {\n        var cookie = cookies[i];\n        while (cookie.charAt(0) === ' ') {\n            cookie = cookie.substring(1, cookie.length);\n        }\n        if (cookie.indexOf(nameEQ) === 0) {\n            return decodeURIComponent(cookie.substring(nameEQ.length));\n        }\n    }\n    return null;\n}\n// do we need to set the domain?\nfunction setCookie(name, value, options) {\n    if (userAllowsCookie(name)) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        var cookieString = name + '=' + value + '; path=/; SameSite=Strict';\n        if (options.days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (options.days * 24 * 60 * 60 * 1000));\n            cookieString = cookieString + '; expires=' + date.toUTCString();\n        }\n        if (document.location.protocol === 'https:') {\n            cookieString = cookieString + '; Secure';\n        }\n        document.cookie = cookieString;\n    }\n}\nfunction deleteCookie(name) {\n    if (Cookie(name)) {\n        // Cookies need to be deleted in the same level of specificity in which they were set\n        // If a cookie was set with a specified domain, it needs to be specified when deleted\n        // If a cookie wasn't set with the domain attribute, it shouldn't be there when deleted\n        // You can't tell if a cookie was set with a domain attribute or not, so try both options\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + window.location.hostname + ';path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=.' + window.location.hostname + ';path=/';\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\n * This seems to fail in IE8, requires more investigation.\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\n */\nfunction nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n        return nodes.forEach(callback);\n    }\n    for (var i = 0; i < nodes.length; i++) {\n        callback.call(window, nodes[i], i, nodes);\n    }\n}\nexport { nodeListForEach };\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaGVscGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFDSCxTQUFTLGVBQWUsQ0FBQyxLQUFLLEVBQUUsUUFBUTtJQUNwQyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7S0FDakM7SUFDRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNuQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFBO0tBQzVDO0FBQ0wsQ0FBQztBQUVELE9BQU8sRUFDSCxlQUFlLEVBQ2xCLENBQUEiLCJmaWxlIjoiY29tcG9uZW50cy9oZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoaXMgc2VlbXMgdG8gZmFpbCBpbiBJRTgsIHJlcXVpcmVzIG1vcmUgaW52ZXN0aWdhdGlvbi5cclxuICogU2VlOiBodHRwczovL2dpdGh1Yi5jb20vaW1hZ2l0YW1hL25vZGVsaXN0LWZvcmVhY2gtcG9seWZpbGxcclxuICovXHJcbmZ1bmN0aW9uIG5vZGVMaXN0Rm9yRWFjaChub2RlcywgY2FsbGJhY2spIHtcclxuICAgIGlmICh3aW5kb3cuTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcclxuICAgICAgICByZXR1cm4gbm9kZXMuZm9yRWFjaChjYWxsYmFjaylcclxuICAgIH1cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjYWxsYmFjay5jYWxsKHdpbmRvdywgbm9kZXNbaV0sIGksIG5vZGVzKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge1xyXG4gICAgbm9kZUxpc3RGb3JFYWNoXHJcbn0iXX0=\n","import * as CookieFunctions from './cookie-functions.js';\n/*todo: we don't meed a pollyfill for bind, as long as we server up the non js version of the site for ie8 (https://caniuse.com/?search=bind) */\n/*import 'govuk-frontend/govuk/vendor/polyfills/Function/prototype/bind'*/\n/*todo: i think we're ok for this too (see above about ie8), but we _might_ need it for >8 ie (use? https://www.npmjs.com/package/events-polyfill)*/\n/*import 'govuk-frontend/govuk/vendor/polyfills/Event'*/\nimport { nodeListForEach } from './helpers.js';\nimport { sendPageViewEvent, sendFilterPageCustomEvent, sendAnalyticsCustomEvent, updateAnalyticsStorageConsent } from './analytics.js';\nconst cookieBannerAcceptSelector = '.js-cookie-banner-accept';\nconst cookieBannerRejectSelector = '.js-cookie-banner-reject';\nconst cookieBannerHideButtonSelector = '.js-cookie-banner-hide';\nconst cookieMessageSelector = '.js-cookie-banner-message';\nconst cookieConfirmationAcceptSelector = '.js-cookie-banner-confirmation-accept';\nconst cookieConfirmationRejectSelector = '.js-cookie-banner-confirmation-reject';\nexport default function CookieBanner($module) {\n    this.$module = $module;\n}\nCookieBanner.prototype.init = function () {\n    this.$cookieBanner = this.$module;\n    this.$acceptButton = this.$module.querySelector(cookieBannerAcceptSelector);\n    this.$rejectButton = this.$module.querySelector(cookieBannerRejectSelector);\n    this.$cookieMessage = this.$module.querySelector(cookieMessageSelector);\n    this.$cookieConfirmationAccept = this.$module.querySelector(cookieConfirmationAcceptSelector);\n    this.$cookieConfirmationReject = this.$module.querySelector(cookieConfirmationRejectSelector);\n    this.$cookieBannerHideButtons = this.$module.querySelectorAll(cookieBannerHideButtonSelector);\n    // Exit if no cookie banner module\n    // or if we're on the cookies page to avoid circular journeys\n    if (!this.$cookieBanner || this.onCookiesPage()) {\n        return;\n    }\n    // Show the cookie banner to users who have not consented or have an\n    // outdated consent cookie\n    var currentConsentCookie = CookieFunctions.getConsentCookie();\n    if (!currentConsentCookie || !CookieFunctions.isValidConsentCookie(currentConsentCookie)) {\n        // If the consent cookie version is not valid, we need to remove any cookies which have been\n        // set previously\n        CookieFunctions.resetCookies();\n        this.$cookieBanner.removeAttribute('hidden');\n    }\n    this.$acceptButton.addEventListener('click', this.acceptCookies.bind(this));\n    this.$rejectButton.addEventListener('click', this.rejectCookies.bind(this));\n    nodeListForEach(this.$cookieBannerHideButtons, function ($cookieBannerHideButton) {\n        $cookieBannerHideButton.addEventListener('click', this.hideBanner.bind(this));\n    }.bind(this));\n};\nCookieBanner.prototype.hideBanner = function () {\n    this.$cookieBanner.setAttribute('hidden', true);\n};\nCookieBanner.prototype.acceptCookies = function () {\n    // Do actual cookie consent bit\n    //todo: need to remove initAnalytics from setConsentCookie\n    CookieFunctions.setConsentCookie({ analytics: true });\n    updateAnalyticsStorageConsent(true);\n    sendAnalyticsCustomEvent(true, 'banner');\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationAccept);\n};\nCookieBanner.prototype.rejectCookies = function () {\n    // Do actual cookie consent bit\n    //CookieFunctions.setConsentCookie({ analytics: true });\n    CookieFunctions.setConsentCookie({ analytics: false });\n    //todo: delay?\n    updateAnalyticsStorageConsent(true);\n    sendAnalyticsCustomEvent(false, 'banner');\n    updateAnalyticsStorageConsent(false);\n    //disableAnalytics();\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationReject);\n};\nCookieBanner.prototype.revealConfirmationMessage = function (confirmationMessage) {\n    confirmationMessage.removeAttribute('hidden');\n    // Set tabindex to -1 to make the confirmation banner focusable with JavaScript\n    if (!confirmationMessage.getAttribute('tabindex')) {\n        confirmationMessage.setAttribute('tabindex', '-1');\n        confirmationMessage.addEventListener('blur', function () {\n            confirmationMessage.removeAttribute('tabindex');\n        });\n    }\n    confirmationMessage.focus();\n};\nCookieBanner.prototype.onCookiesPage = function () {\n    return window.location.pathname === '/cookies/';\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY29va2llLWJhbm5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssZUFBZSxNQUFNLHVCQUF1QixDQUFBO0FBQ3hELGdKQUFnSjtBQUNoSiwwRUFBMEU7QUFDMUUsb0pBQW9KO0FBQ3BKLHdEQUF3RDtBQUN4RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sY0FBYyxDQUFBO0FBQzlDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSx5QkFBeUIsRUFBRSx3QkFBd0IsRUFBb0IsNkJBQTZCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUd6SixNQUFNLDBCQUEwQixHQUFHLDBCQUEwQixDQUFBO0FBQzdELE1BQU0sMEJBQTBCLEdBQUcsMEJBQTBCLENBQUE7QUFDN0QsTUFBTSw4QkFBOEIsR0FBRyx3QkFBd0IsQ0FBQTtBQUMvRCxNQUFNLHFCQUFxQixHQUFHLDJCQUEyQixDQUFBO0FBQ3pELE1BQU0sZ0NBQWdDLEdBQUcsdUNBQXVDLENBQUE7QUFDaEYsTUFBTSxnQ0FBZ0MsR0FBRyx1Q0FBdUMsQ0FBQTtBQUVoRixNQUFNLENBQUMsT0FBTyxVQUFVLFlBQVksQ0FBQyxPQUFvQjtJQUNyRCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztBQUMzQixDQUFDO0FBRUQsWUFBWSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUc7SUFDMUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFBO0lBQ2pDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsMEJBQTBCLENBQUMsQ0FBQTtJQUMzRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLDBCQUEwQixDQUFDLENBQUE7SUFDM0UsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO0lBQ3ZFLElBQUksQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFBO0lBQzdGLElBQUksQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFBO0lBQzdGLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLDhCQUE4QixDQUFDLENBQUE7SUFFN0Ysa0NBQWtDO0lBQ2xDLDZEQUE2RDtJQUM3RCxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFLEVBQUU7UUFDN0MsT0FBTTtLQUNUO0lBRUQsb0VBQW9FO0lBQ3BFLDBCQUEwQjtJQUMxQixJQUFJLG9CQUFvQixHQUFHLGVBQWUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFBO0lBRTdELElBQUksQ0FBQyxvQkFBb0IsSUFBSSxDQUFDLGVBQWUsQ0FBQyxvQkFBb0IsQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFO1FBQ3RGLDRGQUE0RjtRQUM1RixpQkFBaUI7UUFDakIsZUFBZSxDQUFDLFlBQVksRUFBRSxDQUFBO1FBRTlCLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0tBQy9DO0lBRUQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtJQUMzRSxJQUFJLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO0lBRTNFLGVBQWUsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLEVBQUUsVUFBVSx1QkFBdUI7UUFDNUUsdUJBQXVCLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7SUFDakYsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQ2pCLENBQUMsQ0FBQTtBQUVELFlBQVksQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHO0lBQ2hDLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQTtBQUNuRCxDQUFDLENBQUE7QUFFRCxZQUFZLENBQUMsU0FBUyxDQUFDLGFBQWEsR0FBRztJQUNuQywrQkFBK0I7SUFDL0IsMERBQTBEO0lBQzFELGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXRELDZCQUE2QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBRXBDLHdCQUF3QixDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN6QyxpQkFBaUIsRUFBRSxDQUFDO0lBQ3BCLHlCQUF5QixFQUFFLENBQUM7SUFFNUIsNENBQTRDO0lBQzVDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUNoRCxJQUFJLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUE7QUFDbEUsQ0FBQyxDQUFBO0FBRUQsWUFBWSxDQUFDLFNBQVMsQ0FBQyxhQUFhLEdBQUc7SUFDbkMsK0JBQStCO0lBQy9CLHdEQUF3RDtJQUV4RCxlQUFlLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUV2RCxjQUFjO0lBQ2QsNkJBQTZCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFcEMsd0JBQXdCLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRTFDLDZCQUE2QixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRXJDLHFCQUFxQjtJQUVyQiw0Q0FBNEM7SUFDNUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ2hELElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQTtBQUNsRSxDQUFDLENBQUE7QUFFRCxZQUFZLENBQUMsU0FBUyxDQUFDLHlCQUF5QixHQUFHLFVBQVUsbUJBQW1CO0lBQzVFLG1CQUFtQixDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUU3QywrRUFBK0U7SUFDL0UsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsRUFBRTtRQUMvQyxtQkFBbUIsQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFBO1FBRWxELG1CQUFtQixDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRTtZQUN6QyxtQkFBbUIsQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDbkQsQ0FBQyxDQUFDLENBQUE7S0FDTDtJQUVELG1CQUFtQixDQUFDLEtBQUssRUFBRSxDQUFBO0FBQy9CLENBQUMsQ0FBQTtBQUVELFlBQVksQ0FBQyxTQUFTLENBQUMsYUFBYSxHQUFHO0lBQ25DLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEtBQUssV0FBVyxDQUFBO0FBQ25ELENBQUMsQ0FBQSIsImZpbGUiOiJjb21wb25lbnRzL2Nvb2tpZS1iYW5uZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBDb29raWVGdW5jdGlvbnMgZnJvbSAnLi9jb29raWUtZnVuY3Rpb25zLmpzJ1xyXG4vKnRvZG86IHdlIGRvbid0IG1lZWQgYSBwb2xseWZpbGwgZm9yIGJpbmQsIGFzIGxvbmcgYXMgd2Ugc2VydmVyIHVwIHRoZSBub24ganMgdmVyc2lvbiBvZiB0aGUgc2l0ZSBmb3IgaWU4IChodHRwczovL2Nhbml1c2UuY29tLz9zZWFyY2g9YmluZCkgKi9cclxuLyppbXBvcnQgJ2dvdnVrLWZyb250ZW5kL2dvdnVrL3ZlbmRvci9wb2x5ZmlsbHMvRnVuY3Rpb24vcHJvdG90eXBlL2JpbmQnKi9cclxuLyp0b2RvOiBpIHRoaW5rIHdlJ3JlIG9rIGZvciB0aGlzIHRvbyAoc2VlIGFib3ZlIGFib3V0IGllOCksIGJ1dCB3ZSBfbWlnaHRfIG5lZWQgaXQgZm9yID44IGllICh1c2U/IGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2V2ZW50cy1wb2x5ZmlsbCkqL1xyXG4vKmltcG9ydCAnZ292dWstZnJvbnRlbmQvZ292dWsvdmVuZG9yL3BvbHlmaWxscy9FdmVudCcqL1xyXG5pbXBvcnQgeyBub2RlTGlzdEZvckVhY2ggfSBmcm9tICcuL2hlbHBlcnMuanMnXHJcbmltcG9ydCB7IHNlbmRQYWdlVmlld0V2ZW50LCBzZW5kRmlsdGVyUGFnZUN1c3RvbUV2ZW50LCBzZW5kQW5hbHl0aWNzQ3VzdG9tRXZlbnQsIGRpc2FibGVBbmFseXRpY3MsIHVwZGF0ZUFuYWx5dGljc1N0b3JhZ2VDb25zZW50IH0gZnJvbSAnLi9hbmFseXRpY3MuanMnO1xyXG5cclxuXHJcbmNvbnN0IGNvb2tpZUJhbm5lckFjY2VwdFNlbGVjdG9yID0gJy5qcy1jb29raWUtYmFubmVyLWFjY2VwdCdcclxuY29uc3QgY29va2llQmFubmVyUmVqZWN0U2VsZWN0b3IgPSAnLmpzLWNvb2tpZS1iYW5uZXItcmVqZWN0J1xyXG5jb25zdCBjb29raWVCYW5uZXJIaWRlQnV0dG9uU2VsZWN0b3IgPSAnLmpzLWNvb2tpZS1iYW5uZXItaGlkZSdcclxuY29uc3QgY29va2llTWVzc2FnZVNlbGVjdG9yID0gJy5qcy1jb29raWUtYmFubmVyLW1lc3NhZ2UnXHJcbmNvbnN0IGNvb2tpZUNvbmZpcm1hdGlvbkFjY2VwdFNlbGVjdG9yID0gJy5qcy1jb29raWUtYmFubmVyLWNvbmZpcm1hdGlvbi1hY2NlcHQnXHJcbmNvbnN0IGNvb2tpZUNvbmZpcm1hdGlvblJlamVjdFNlbGVjdG9yID0gJy5qcy1jb29raWUtYmFubmVyLWNvbmZpcm1hdGlvbi1yZWplY3QnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb29raWVCYW5uZXIoJG1vZHVsZTogSFRNTEVsZW1lbnQpIHtcclxuICAgIHRoaXMuJG1vZHVsZSA9ICRtb2R1bGU7XHJcbn1cclxuXHJcbkNvb2tpZUJhbm5lci5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMuJGNvb2tpZUJhbm5lciA9IHRoaXMuJG1vZHVsZVxyXG4gICAgdGhpcy4kYWNjZXB0QnV0dG9uID0gdGhpcy4kbW9kdWxlLnF1ZXJ5U2VsZWN0b3IoY29va2llQmFubmVyQWNjZXB0U2VsZWN0b3IpXHJcbiAgICB0aGlzLiRyZWplY3RCdXR0b24gPSB0aGlzLiRtb2R1bGUucXVlcnlTZWxlY3Rvcihjb29raWVCYW5uZXJSZWplY3RTZWxlY3RvcilcclxuICAgIHRoaXMuJGNvb2tpZU1lc3NhZ2UgPSB0aGlzLiRtb2R1bGUucXVlcnlTZWxlY3Rvcihjb29raWVNZXNzYWdlU2VsZWN0b3IpXHJcbiAgICB0aGlzLiRjb29raWVDb25maXJtYXRpb25BY2NlcHQgPSB0aGlzLiRtb2R1bGUucXVlcnlTZWxlY3Rvcihjb29raWVDb25maXJtYXRpb25BY2NlcHRTZWxlY3RvcilcclxuICAgIHRoaXMuJGNvb2tpZUNvbmZpcm1hdGlvblJlamVjdCA9IHRoaXMuJG1vZHVsZS5xdWVyeVNlbGVjdG9yKGNvb2tpZUNvbmZpcm1hdGlvblJlamVjdFNlbGVjdG9yKVxyXG4gICAgdGhpcy4kY29va2llQmFubmVySGlkZUJ1dHRvbnMgPSB0aGlzLiRtb2R1bGUucXVlcnlTZWxlY3RvckFsbChjb29raWVCYW5uZXJIaWRlQnV0dG9uU2VsZWN0b3IpXHJcblxyXG4gICAgLy8gRXhpdCBpZiBubyBjb29raWUgYmFubmVyIG1vZHVsZVxyXG4gICAgLy8gb3IgaWYgd2UncmUgb24gdGhlIGNvb2tpZXMgcGFnZSB0byBhdm9pZCBjaXJjdWxhciBqb3VybmV5c1xyXG4gICAgaWYgKCF0aGlzLiRjb29raWVCYW5uZXIgfHwgdGhpcy5vbkNvb2tpZXNQYWdlKCkpIHtcclxuICAgICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICAvLyBTaG93IHRoZSBjb29raWUgYmFubmVyIHRvIHVzZXJzIHdobyBoYXZlIG5vdCBjb25zZW50ZWQgb3IgaGF2ZSBhblxyXG4gICAgLy8gb3V0ZGF0ZWQgY29uc2VudCBjb29raWVcclxuICAgIHZhciBjdXJyZW50Q29uc2VudENvb2tpZSA9IENvb2tpZUZ1bmN0aW9ucy5nZXRDb25zZW50Q29va2llKClcclxuXHJcbiAgICBpZiAoIWN1cnJlbnRDb25zZW50Q29va2llIHx8ICFDb29raWVGdW5jdGlvbnMuaXNWYWxpZENvbnNlbnRDb29raWUoY3VycmVudENvbnNlbnRDb29raWUpKSB7XHJcbiAgICAgICAgLy8gSWYgdGhlIGNvbnNlbnQgY29va2llIHZlcnNpb24gaXMgbm90IHZhbGlkLCB3ZSBuZWVkIHRvIHJlbW92ZSBhbnkgY29va2llcyB3aGljaCBoYXZlIGJlZW5cclxuICAgICAgICAvLyBzZXQgcHJldmlvdXNseVxyXG4gICAgICAgIENvb2tpZUZ1bmN0aW9ucy5yZXNldENvb2tpZXMoKVxyXG5cclxuICAgICAgICB0aGlzLiRjb29raWVCYW5uZXIucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuJGFjY2VwdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuYWNjZXB0Q29va2llcy5iaW5kKHRoaXMpKVxyXG4gICAgdGhpcy4kcmVqZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5yZWplY3RDb29raWVzLmJpbmQodGhpcykpXHJcblxyXG4gICAgbm9kZUxpc3RGb3JFYWNoKHRoaXMuJGNvb2tpZUJhbm5lckhpZGVCdXR0b25zLCBmdW5jdGlvbiAoJGNvb2tpZUJhbm5lckhpZGVCdXR0b24pIHtcclxuICAgICAgICAkY29va2llQmFubmVySGlkZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGlkZUJhbm5lci5iaW5kKHRoaXMpKVxyXG4gICAgfS5iaW5kKHRoaXMpKVxyXG59XHJcblxyXG5Db29raWVCYW5uZXIucHJvdG90eXBlLmhpZGVCYW5uZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLiRjb29raWVCYW5uZXIuc2V0QXR0cmlidXRlKCdoaWRkZW4nLCB0cnVlKVxyXG59XHJcblxyXG5Db29raWVCYW5uZXIucHJvdG90eXBlLmFjY2VwdENvb2tpZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBEbyBhY3R1YWwgY29va2llIGNvbnNlbnQgYml0XHJcbiAgICAvL3RvZG86IG5lZWQgdG8gcmVtb3ZlIGluaXRBbmFseXRpY3MgZnJvbSBzZXRDb25zZW50Q29va2llXHJcbiAgICBDb29raWVGdW5jdGlvbnMuc2V0Q29uc2VudENvb2tpZSh7IGFuYWx5dGljczogdHJ1ZSB9KTtcclxuXHJcbiAgICB1cGRhdGVBbmFseXRpY3NTdG9yYWdlQ29uc2VudCh0cnVlKTtcclxuXHJcbiAgICBzZW5kQW5hbHl0aWNzQ3VzdG9tRXZlbnQodHJ1ZSwgJ2Jhbm5lcicpO1xyXG4gICAgc2VuZFBhZ2VWaWV3RXZlbnQoKTtcclxuICAgIHNlbmRGaWx0ZXJQYWdlQ3VzdG9tRXZlbnQoKTtcclxuXHJcbiAgICAvLyBIaWRlIGJhbm5lciBhbmQgc2hvdyBjb25maXJtYXRpb24gbWVzc2FnZVxyXG4gICAgdGhpcy4kY29va2llTWVzc2FnZS5zZXRBdHRyaWJ1dGUoJ2hpZGRlbicsIHRydWUpXHJcbiAgICB0aGlzLnJldmVhbENvbmZpcm1hdGlvbk1lc3NhZ2UodGhpcy4kY29va2llQ29uZmlybWF0aW9uQWNjZXB0KVxyXG59XHJcblxyXG5Db29raWVCYW5uZXIucHJvdG90eXBlLnJlamVjdENvb2tpZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBEbyBhY3R1YWwgY29va2llIGNvbnNlbnQgYml0XHJcbiAgICAvL0Nvb2tpZUZ1bmN0aW9ucy5zZXRDb25zZW50Q29va2llKHsgYW5hbHl0aWNzOiB0cnVlIH0pO1xyXG5cclxuICAgIENvb2tpZUZ1bmN0aW9ucy5zZXRDb25zZW50Q29va2llKHsgYW5hbHl0aWNzOiBmYWxzZSB9KTtcclxuXHJcbiAgICAvL3RvZG86IGRlbGF5P1xyXG4gICAgdXBkYXRlQW5hbHl0aWNzU3RvcmFnZUNvbnNlbnQodHJ1ZSk7XHJcblxyXG4gICAgc2VuZEFuYWx5dGljc0N1c3RvbUV2ZW50KGZhbHNlLCAnYmFubmVyJyk7XHJcblxyXG4gICAgdXBkYXRlQW5hbHl0aWNzU3RvcmFnZUNvbnNlbnQoZmFsc2UpO1xyXG5cclxuICAgIC8vZGlzYWJsZUFuYWx5dGljcygpO1xyXG5cclxuICAgIC8vIEhpZGUgYmFubmVyIGFuZCBzaG93IGNvbmZpcm1hdGlvbiBtZXNzYWdlXHJcbiAgICB0aGlzLiRjb29raWVNZXNzYWdlLnNldEF0dHJpYnV0ZSgnaGlkZGVuJywgdHJ1ZSlcclxuICAgIHRoaXMucmV2ZWFsQ29uZmlybWF0aW9uTWVzc2FnZSh0aGlzLiRjb29raWVDb25maXJtYXRpb25SZWplY3QpXHJcbn1cclxuXHJcbkNvb2tpZUJhbm5lci5wcm90b3R5cGUucmV2ZWFsQ29uZmlybWF0aW9uTWVzc2FnZSA9IGZ1bmN0aW9uIChjb25maXJtYXRpb25NZXNzYWdlKSB7XHJcbiAgICBjb25maXJtYXRpb25NZXNzYWdlLnJlbW92ZUF0dHJpYnV0ZSgnaGlkZGVuJylcclxuXHJcbiAgICAvLyBTZXQgdGFiaW5kZXggdG8gLTEgdG8gbWFrZSB0aGUgY29uZmlybWF0aW9uIGJhbm5lciBmb2N1c2FibGUgd2l0aCBKYXZhU2NyaXB0XHJcbiAgICBpZiAoIWNvbmZpcm1hdGlvbk1lc3NhZ2UuZ2V0QXR0cmlidXRlKCd0YWJpbmRleCcpKSB7XHJcbiAgICAgICAgY29uZmlybWF0aW9uTWVzc2FnZS5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJylcclxuXHJcbiAgICAgICAgY29uZmlybWF0aW9uTWVzc2FnZS5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjb25maXJtYXRpb25NZXNzYWdlLnJlbW92ZUF0dHJpYnV0ZSgndGFiaW5kZXgnKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY29uZmlybWF0aW9uTWVzc2FnZS5mb2N1cygpXHJcbn1cclxuXHJcbkNvb2tpZUJhbm5lci5wcm90b3R5cGUub25Db29raWVzUGFnZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgPT09ICcvY29va2llcy8nXHJcbn1cclxuIl19\n","import { getConsentCookie, setConsentCookie } from './cookie-functions.js';\nimport { nodeListForEach } from './helpers.js';\nimport { sendPageViewEvent, sendAnalyticsCustomEvent } from './analytics.js';\nfunction CookiesPage($module) {\n    this.$module = $module;\n}\nCookiesPage.prototype.init = function () {\n    this.$cookiePage = this.$module;\n    if (!this.$cookiePage) {\n        return;\n    }\n    this.$cookieForm = this.$cookiePage.querySelector('.js-cookies-page-form');\n    this.$cookieFormFieldsets = this.$cookieForm.querySelectorAll('.js-cookies-page-form-fieldset');\n    this.$successNotification = this.$cookiePage.querySelector('.js-cookies-page-success');\n    this.$successLink = this.$cookiePage.querySelector('.js-cookies-page-success-link');\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        this.showUserPreference($cookieFormFieldset, getConsentCookie());\n        /*        $cookieFormFieldset.removeAttribute('hidden')*/\n    }.bind(this));\n    // Show submit button\n    //this.$cookieForm.querySelector('.js-cookies-form-button').removeAttribute('hidden')\n    this.$cookieForm.addEventListener('submit', this.savePreferences.bind(this));\n};\nCookiesPage.prototype.savePreferences = function (event) {\n    // Stop default form submission behaviour\n    event.preventDefault();\n    var preferences = {};\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        var cookieType = this.getCookieType($cookieFormFieldset);\n        var selectedItem = $cookieFormFieldset.querySelector('input[name=' + cookieType + ']:checked').value;\n        preferences[cookieType] = selectedItem === 'true';\n    }.bind(this));\n    // Save preferences to cookie and show success notification\n    setConsentCookie(preferences);\n    sendPageViewEvent();\n    sendAnalyticsCustomEvent(preferences['analytics'], 'cookies');\n    // handle the corner case, where the user has selected their preference on the cookie page, whilst the banner is still open as they haven't previously selected their preference\n    //todo: call hideBanner\n    var banner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    banner.setAttribute('hidden', 'true');\n    this.showSuccessNotification();\n};\nCookiesPage.prototype.showUserPreference = function ($cookieFormFieldset, preferences) {\n    var cookieType = this.getCookieType($cookieFormFieldset);\n    var preference = false;\n    if (cookieType && preferences && preferences[cookieType] !== undefined) {\n        preference = preferences[cookieType];\n    }\n    var radioValue = preference ? 'true' : 'false';\n    var radio = $cookieFormFieldset.querySelector('input[name=' + cookieType + '][value=' + radioValue + ']');\n    radio.checked = true;\n};\nCookiesPage.prototype.showSuccessNotification = function () {\n    this.$successNotification.removeAttribute('hidden');\n    // if the user's come to the cookies page through the link in the cookie banner, show a link to take them back to the page they came from\n    var referrer = document.referrer ? new URL(document.referrer).pathname : false;\n    if (referrer && referrer !== document.location.pathname) {\n        this.$successLink.href = referrer;\n        this.$successLink.removeAttribute('hidden');\n    }\n    else {\n        this.$successLink.setAttribute('hidden', 'true');\n    }\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // GOV.UK Frontend will remove the tabindex on blur as the component doesn't\n    // need to be focusable after the user has read the text.\n    if (!this.$successNotification.getAttribute('tabindex')) {\n        this.$successNotification.setAttribute('tabindex', '-1');\n    }\n    this.$successNotification.focus();\n    // scroll to the top of the page\n    window.scrollTo(0, 0);\n};\nCookiesPage.prototype.getCookieType = function ($cookieFormFieldset) {\n    return $cookieFormFieldset.id;\n};\nexport default CookiesPage;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// js components were originally snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/\nimport CookieBanner from './components/cookie-banner.js';\nimport { getConsentCookie, isValidConsentCookie } from './components/cookie-functions.js';\nimport CookiesPage from './components/cookies-page.js';\nimport initAnalytics, { sendPageViewEvent, sendFilterPageCustomEvent, updateAnalyticsStorageConsent } from './components/analytics';\n// Initialise cookie banner\nconst $cookieBanner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\nnew CookieBanner($cookieBanner).init();\ninitAnalytics(window.GA_MEASUREMENT_ID);\n// Initialise analytics if consent is given\nvar userConsent = getConsentCookie();\nif (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics) {\n    //initAnalytics(window.GA_MEASUREMENT_ID);\n    //todo: always do these?\n    //    sendPageViewEvent();\n    //    sendFilterPageCustomEvent();\n    updateAnalyticsStorageConsent(true);\n}\nsendPageViewEvent();\nsendFilterPageCustomEvent();\n//todo: move this into scripts section on cookie page\n// Initialise cookie page\nvar $cookiesPage = document.querySelector('[data-module=\"app-cookies-page\"]');\nnew CookiesPage($cookiesPage).init();\nconst backLinks = document.querySelectorAll(\".app-back-link\");\nbackLinks.forEach((link) => {\n    link.addEventListener(\"click\", () => {\n        window.history.back();\n    });\n});\nconst button = document.getElementById('open-close-filters');\nbutton === null || button === void 0 ? void 0 : button.addEventListener('click', function handleClick(event) {\n    //todo: update to ts 2?\n    const filterButton = document.getElementById(\"filters\");\n    if (filterButton.style.display === \"none\") {\n        filterButton.style.display = \"block\";\n    }\n    else {\n        filterButton.style.display = \"none\";\n    }\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvSUFBb0k7QUFXcEksT0FBTyxZQUFZLE1BQU0sK0JBQStCLENBQUE7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFDekYsT0FBTyxXQUFXLE1BQU0sOEJBQThCLENBQUE7QUFDdEQsT0FBTyxhQUFhLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSx5QkFBeUIsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXBJLDJCQUEyQjtBQUMzQixNQUFNLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLHFDQUFxQyxDQUF1QixDQUFDO0FBQzFHLElBQUksWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0FBRXZDLGFBQWEsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUV4QywyQ0FBMkM7QUFDM0MsSUFBSSxXQUFXLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztBQUNyQyxJQUFJLFdBQVcsSUFBSSxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFO0lBQzNFLDBDQUEwQztJQUMxQyx3QkFBd0I7SUFDNUIsMEJBQTBCO0lBQzFCLGtDQUFrQztJQUU5Qiw2QkFBNkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztDQUN2QztBQUVELGlCQUFpQixFQUFFLENBQUM7QUFDcEIseUJBQXlCLEVBQUUsQ0FBQztBQUU1QixxREFBcUQ7QUFDckQseUJBQXlCO0FBQ3pCLElBQUksWUFBWSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsa0NBQWtDLENBQUMsQ0FBQTtBQUM3RSxJQUFJLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtBQUVwQyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUM5RCxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBdUIsRUFBRSxFQUFFO0lBQzFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ2hDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQztBQUVILE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUM3RCxNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUUsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFNBQVMsV0FBVyxDQUFDLEtBQUs7SUFDeEQsdUJBQXVCO0lBQ3ZCLE1BQU0sWUFBWSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUEwQixDQUFDO0lBQ2pGLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxPQUFPLEtBQUssTUFBTSxFQUFFO1FBQ3ZDLFlBQVksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztLQUN4QztTQUFNO1FBQ0gsWUFBWSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0tBQ3ZDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8ganMgY29tcG9uZW50cyB3ZXJlIG9yaWdpbmFsbHkgc25hZmZsZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWxwaGFnb3YvZ292dWstZGVzaWduLXN5c3RlbS9ibG9iL21haW4vc3JjL2phdmFzY3JpcHRzL2NvbXBvbmVudHMvXHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgICBpbnRlcmZhY2UgV2luZG93IHtcclxuICAgICAgICBHRFNfQ09OU0VOVF9DT09LSUVfVkVSU0lPTjogbnVtYmVyO1xyXG4gICAgICAgIEdBX01FQVNVUkVNRU5UX0lEOiBzdHJpbmc7XHJcbiAgICAgICAgR0FfQ09OVEFJTkVSX0lEOiBzdHJpbmc7XHJcbiAgICAgICAgZGF0YUxheWVyOiBhbnlbXTtcclxuICAgIH1cclxufVxyXG5cclxuaW1wb3J0IENvb2tpZUJhbm5lciBmcm9tICcuL2NvbXBvbmVudHMvY29va2llLWJhbm5lci5qcydcclxuaW1wb3J0IHsgZ2V0Q29uc2VudENvb2tpZSwgaXNWYWxpZENvbnNlbnRDb29raWUgfSBmcm9tICcuL2NvbXBvbmVudHMvY29va2llLWZ1bmN0aW9ucy5qcydcclxuaW1wb3J0IENvb2tpZXNQYWdlIGZyb20gJy4vY29tcG9uZW50cy9jb29raWVzLXBhZ2UuanMnXHJcbmltcG9ydCBpbml0QW5hbHl0aWNzLCB7IHNlbmRQYWdlVmlld0V2ZW50LCBzZW5kRmlsdGVyUGFnZUN1c3RvbUV2ZW50LCB1cGRhdGVBbmFseXRpY3NTdG9yYWdlQ29uc2VudCB9IGZyb20gJy4vY29tcG9uZW50cy9hbmFseXRpY3MnO1xyXG5cclxuLy8gSW5pdGlhbGlzZSBjb29raWUgYmFubmVyXHJcbmNvbnN0ICRjb29raWVCYW5uZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tb2R1bGU9XCJnb3Z1ay1jb29raWUtYmFubmVyXCJdJykgYXMgSFRNTEVsZW1lbnQgfCBudWxsO1xyXG5uZXcgQ29va2llQmFubmVyKCRjb29raWVCYW5uZXIpLmluaXQoKTtcclxuXHJcbmluaXRBbmFseXRpY3Mod2luZG93LkdBX01FQVNVUkVNRU5UX0lEKTtcclxuXHJcbi8vIEluaXRpYWxpc2UgYW5hbHl0aWNzIGlmIGNvbnNlbnQgaXMgZ2l2ZW5cclxudmFyIHVzZXJDb25zZW50ID0gZ2V0Q29uc2VudENvb2tpZSgpO1xyXG5pZiAodXNlckNvbnNlbnQgJiYgaXNWYWxpZENvbnNlbnRDb29raWUodXNlckNvbnNlbnQpICYmIHVzZXJDb25zZW50LmFuYWx5dGljcykge1xyXG4gICAgLy9pbml0QW5hbHl0aWNzKHdpbmRvdy5HQV9NRUFTVVJFTUVOVF9JRCk7XHJcbiAgICAvL3RvZG86IGFsd2F5cyBkbyB0aGVzZT9cclxuLy8gICAgc2VuZFBhZ2VWaWV3RXZlbnQoKTtcclxuLy8gICAgc2VuZEZpbHRlclBhZ2VDdXN0b21FdmVudCgpO1xyXG5cclxuICAgIHVwZGF0ZUFuYWx5dGljc1N0b3JhZ2VDb25zZW50KHRydWUpO1xyXG59XHJcblxyXG5zZW5kUGFnZVZpZXdFdmVudCgpO1xyXG5zZW5kRmlsdGVyUGFnZUN1c3RvbUV2ZW50KCk7XHJcblxyXG4vL3RvZG86IG1vdmUgdGhpcyBpbnRvIHNjcmlwdHMgc2VjdGlvbiBvbiBjb29raWUgcGFnZVxyXG4vLyBJbml0aWFsaXNlIGNvb2tpZSBwYWdlXHJcbnZhciAkY29va2llc1BhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tb2R1bGU9XCJhcHAtY29va2llcy1wYWdlXCJdJylcclxubmV3IENvb2tpZXNQYWdlKCRjb29raWVzUGFnZSkuaW5pdCgpXHJcblxyXG5jb25zdCBiYWNrTGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmFwcC1iYWNrLWxpbmtcIik7XHJcbmJhY2tMaW5rcy5mb3JFYWNoKChsaW5rOiBIVE1MQW5jaG9yRWxlbWVudCkgPT4ge1xyXG4gICAgbGluay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdvcGVuLWNsb3NlLWZpbHRlcnMnKTtcclxuYnV0dG9uPy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50KSB7XHJcbiAgICAvL3RvZG86IHVwZGF0ZSB0byB0cyAyP1xyXG4gICAgY29uc3QgZmlsdGVyQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmaWx0ZXJzXCIpIGFzIEhUTUxEaXZFbGVtZW50IHwgbnVsbDtcclxuICAgIGlmIChmaWx0ZXJCdXR0b24uc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIpIHtcclxuICAgICAgICBmaWx0ZXJCdXR0b24uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIH1cclxufSk7XHJcbiJdfQ==\n"]}