{"version":3,"sources":["tmp/js/components/analytics.js","tmp/js/components/cookie-functions.js","tmp/js/components/helpers.js","tmp/js/components/cookie-banner.js","tmp/js/components/cookies-page.js","tmp/js/app.js"],"names":["loadAnalytics","gaMeasurementId","gtag","dataLayer","push","arguments","window","Date","page_path","getPiiSafeLocation","path","location","pathname","queryString","search","queryParams","URLSearchParams","postcode","get","replace","set","delete","toString","CONSENT_COOKIE_NAME","COOKIE_CATEGORIES","analytics","global","GA_MEASUREMENT_ID","essential","DEFAULT_COOKIE_CONSENT","Cookie","name","value","options","getCookie","deleteCookie","days","setCookie","getConsentCookie","consentCookieObj","consentCookie","JSON","parse","err","isValidConsentCookie","version","GDS_CONSENT_COOKIE_VERSION","setConsentCookie","cookieConsent","option","stringify","resetCookies","cookieType","analyticsAllowed","send_page_view","Analytics","forEach","cookie","userAllowsCookieCategory","cookieCategory","cookiePreferences","e","console","error","userAllowsCookie","cookieName","category","indexOf","nameEQ","cookies","document","split","i","len","length","charAt","substring","decodeURIComponent","cookieString","date","setTime","getTime","toUTCString","protocol","hostname","nodeListForEach","nodes","callback","NodeList","prototype","call","cookieBannerAcceptSelector","cookieBannerRejectSelector","cookieBannerHideButtonSelector","cookieMessageSelector","cookieConfirmationAcceptSelector","cookieConfirmationRejectSelector","CookieBanner","$module","this","CookiesPage","init","$cookieBanner","$acceptButton","querySelector","$rejectButton","$cookieMessage","$cookieConfirmationAccept","$cookieConfirmationReject","$cookieBannerHideButtons","querySelectorAll","onCookiesPage","currentConsentCookie","CookieFunctions.getConsentCookie","CookieFunctions.isValidConsentCookie","CookieFunctions.resetCookies","removeAttribute","addEventListener","acceptCookies","bind","rejectCookies","$cookieBannerHideButton","hideBanner","setAttribute","CookieFunctions.setConsentCookie","revealConfirmationMessage","confirmationMessage","getAttribute","focus","$cookiePage","$cookieForm","$cookieFormFieldsets","$successNotification","$successLink","$cookieFormFieldset","showUserPreference","savePreferences","event","preventDefault","preferences","getCookieType","selectedItem","showSuccessNotification","preference","undefined","radioValue","checked","referrer","URL","href","scrollTo","id","userConsent","$cookiesPage","backLinks","link","history","back","button","getElementById","filterButton","style","display"],"mappings":"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","file":"app.js","sourcesContent":["// it doesn't make sense to do typescript type checking in a javascript file where you can't specify the type (is there a way?)\n// (f is a HTMLScriptElement but we can't cast it in js)\n// so switch off javascript compilation for this file...\n// @ts-nocheck\nexport default function loadAnalytics(gaMeasurementId) {\n    window.dataLayer = window.dataLayer || [];\n    function gtag() { dataLayer.push(arguments); }\n    gtag('js', new Date());\n    gtag('config', gaMeasurementId, {\n        'page_path': getPiiSafeLocation()\n    });\n    //    if (!window.dataLayer) {\n    //        //https://developers.google.com/tag-platform/tag-manager/web/datalayer\n    //        window.dataLayer = window.dataLayer || [];\n    //        //does ga side need to define the Custom Page Path data layer variable?\n    //        //https://www.bounteous.com/insights/2018/03/30/single-page-applications-google-analytics\n    //        window['dataLayer'].push({\n    //            'event': 'config',\n    //            'config': {\n    //                'GTM-W6QMSGQ': {\n    //                    'page_path': getPiiSafeLocation()\n    //                }\n    //            }\n    //        });\n    //        (function (w, d, s, l, i) {\n    //            w[l] = w[l] || []; w[l].push({\n    //                'gtm.start':\n    //                    new Date().getTime(), event: 'gtm.js'\n    //            }); var f = d.getElementsByTagName(s)[0],\n    //                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =\n    //                'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);\n    //        })(window, document, 'script', 'dataLayer', 'GTM-W6QMSGQ');\n    //    }\n}\n/*todo: if keep, prob doesn't belong here*/\nfunction getPiiSafeLocation() {\n    // if GTM has been set up to accept a relative path\n    const path = window.location.pathname;\n    const queryString = window.location.search;\n    const queryParams = new URLSearchParams(queryString);\n    var postcode = queryParams.get(\"postcode\");\n    if (postcode == null) {\n        return path + queryString;\n    }\n    postcode = postcode.replace(/[a-zA-Z]+$/, \"\");\n    queryParams.set(\"postcode\", postcode);\n    queryParams.delete(\"latitude\");\n    queryParams.delete(\"longitude\");\n    // adminDistrict gets a pass\n    const newQueryParams = queryParams.toString();\n    return path + \"?\" + newQueryParams;\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYW5hbHl0aWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLCtIQUErSDtBQUMvSCx3REFBd0Q7QUFDeEQsd0RBQXdEO0FBQ3hELGNBQWM7QUFFZCxNQUFNLENBQUMsT0FBTyxVQUFVLGFBQWEsQ0FBQyxlQUFlO0lBRWpELE1BQU0sQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUM7SUFDMUMsU0FBUyxJQUFJLEtBQUssU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDdkIsSUFBSSxDQUFDLFFBQVEsRUFBRSxlQUFlLEVBQzFCO1FBQ0ksV0FBVyxFQUFFLGtCQUFrQixFQUFFO0tBQ3BDLENBQUMsQ0FBQztJQUdYLDhCQUE4QjtJQUU5QixnRkFBZ0Y7SUFDaEYsb0RBQW9EO0lBRXBELGlGQUFpRjtJQUNqRixtR0FBbUc7SUFDbkcsb0NBQW9DO0lBQ3BDLGdDQUFnQztJQUNoQyx5QkFBeUI7SUFDekIsa0NBQWtDO0lBQ2xDLHVEQUF1RDtJQUN2RCxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGFBQWE7SUFFYixxQ0FBcUM7SUFDckMsNENBQTRDO0lBQzVDLDhCQUE4QjtJQUM5QiwyREFBMkQ7SUFDM0QsdURBQXVEO0lBQ3ZELHlHQUF5RztJQUN6RywwR0FBMEc7SUFDMUcscUVBQXFFO0lBQ3JFLE9BQU87QUFDUCxDQUFDO0FBRUQsMkNBQTJDO0FBQzNDLFNBQVMsa0JBQWtCO0lBQ3ZCLG1EQUFtRDtJQUNuRCxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztJQUN0QyxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztJQUUzQyxNQUFNLFdBQVcsR0FBRyxJQUFJLGVBQWUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUVyRCxJQUFJLFFBQVEsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzNDLElBQUksUUFBUSxJQUFJLElBQUksRUFBRTtRQUNsQixPQUFPLElBQUksR0FBRyxXQUFXLENBQUM7S0FDN0I7SUFDRCxRQUFRLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDOUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFdEMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMvQixXQUFXLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2hDLDRCQUE0QjtJQUU1QixNQUFNLGNBQWMsR0FBRyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDOUMsT0FBTyxJQUFJLEdBQUcsR0FBRyxHQUFHLGNBQWMsQ0FBQztBQUN2QyxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvYW5hbHl0aWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8vIGl0IGRvZXNuJ3QgbWFrZSBzZW5zZSB0byBkbyB0eXBlc2NyaXB0IHR5cGUgY2hlY2tpbmcgaW4gYSBqYXZhc2NyaXB0IGZpbGUgd2hlcmUgeW91IGNhbid0IHNwZWNpZnkgdGhlIHR5cGUgKGlzIHRoZXJlIGEgd2F5PylcclxuLy8gKGYgaXMgYSBIVE1MU2NyaXB0RWxlbWVudCBidXQgd2UgY2FuJ3QgY2FzdCBpdCBpbiBqcylcclxuLy8gc28gc3dpdGNoIG9mZiBqYXZhc2NyaXB0IGNvbXBpbGF0aW9uIGZvciB0aGlzIGZpbGUuLi5cclxuLy8gQHRzLW5vY2hlY2tcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxvYWRBbmFseXRpY3MoZ2FNZWFzdXJlbWVudElkKSB7XHJcblxyXG4gICAgd2luZG93LmRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107XHJcbiAgICBmdW5jdGlvbiBndGFnKCkgeyBkYXRhTGF5ZXIucHVzaChhcmd1bWVudHMpOyB9XHJcbiAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpO1xyXG4gICAgZ3RhZygnY29uZmlnJywgZ2FNZWFzdXJlbWVudElkLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgJ3BhZ2VfcGF0aCc6IGdldFBpaVNhZmVMb2NhdGlvbigpXHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxuLy8gICAgaWYgKCF3aW5kb3cuZGF0YUxheWVyKSB7XHJcblxyXG4vLyAgICAgICAgLy9odHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS90YWctcGxhdGZvcm0vdGFnLW1hbmFnZXIvd2ViL2RhdGFsYXllclxyXG4vLyAgICAgICAgd2luZG93LmRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107XHJcblxyXG4vLyAgICAgICAgLy9kb2VzIGdhIHNpZGUgbmVlZCB0byBkZWZpbmUgdGhlIEN1c3RvbSBQYWdlIFBhdGggZGF0YSBsYXllciB2YXJpYWJsZT9cclxuLy8gICAgICAgIC8vaHR0cHM6Ly93d3cuYm91bnRlb3VzLmNvbS9pbnNpZ2h0cy8yMDE4LzAzLzMwL3NpbmdsZS1wYWdlLWFwcGxpY2F0aW9ucy1nb29nbGUtYW5hbHl0aWNzXHJcbi8vICAgICAgICB3aW5kb3dbJ2RhdGFMYXllciddLnB1c2goe1xyXG4vLyAgICAgICAgICAgICdldmVudCc6ICdjb25maWcnLFxyXG4vLyAgICAgICAgICAgICdjb25maWcnOiB7XHJcbi8vICAgICAgICAgICAgICAgICdHVE0tVzZRTVNHUSc6IHtcclxuLy8gICAgICAgICAgICAgICAgICAgICdwYWdlX3BhdGgnOiBnZXRQaWlTYWZlTG9jYXRpb24oKVxyXG4vLyAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgfSk7XHJcblxyXG4vLyAgICAgICAgKGZ1bmN0aW9uICh3LCBkLCBzLCBsLCBpKSB7XHJcbi8vICAgICAgICAgICAgd1tsXSA9IHdbbF0gfHwgW107IHdbbF0ucHVzaCh7XHJcbi8vICAgICAgICAgICAgICAgICdndG0uc3RhcnQnOlxyXG4vLyAgICAgICAgICAgICAgICAgICAgbmV3IERhdGUoKS5nZXRUaW1lKCksIGV2ZW50OiAnZ3RtLmpzJ1xyXG4vLyAgICAgICAgICAgIH0pOyB2YXIgZiA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sXHJcbi8vICAgICAgICAgICAgICAgIGogPSBkLmNyZWF0ZUVsZW1lbnQocyksIGRsID0gbCAhPSAnZGF0YUxheWVyJyA/ICcmbD0nICsgbCA6ICcnOyBqLmFzeW5jID0gdHJ1ZTsgai5zcmMgPVxyXG4vLyAgICAgICAgICAgICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScgKyBpICsgZGw7IGYucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaiwgZik7XHJcbi8vICAgICAgICB9KSh3aW5kb3csIGRvY3VtZW50LCAnc2NyaXB0JywgJ2RhdGFMYXllcicsICdHVE0tVzZRTVNHUScpO1xyXG4vLyAgICB9XHJcbn1cclxuXHJcbi8qdG9kbzogaWYga2VlcCwgcHJvYiBkb2Vzbid0IGJlbG9uZyBoZXJlKi9cclxuZnVuY3Rpb24gZ2V0UGlpU2FmZUxvY2F0aW9uKCkge1xyXG4gICAgLy8gaWYgR1RNIGhhcyBiZWVuIHNldCB1cCB0byBhY2NlcHQgYSByZWxhdGl2ZSBwYXRoXHJcbiAgICBjb25zdCBwYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lO1xyXG4gICAgY29uc3QgcXVlcnlTdHJpbmcgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoO1xyXG5cclxuICAgIGNvbnN0IHF1ZXJ5UGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeVN0cmluZyk7XHJcblxyXG4gICAgdmFyIHBvc3Rjb2RlID0gcXVlcnlQYXJhbXMuZ2V0KFwicG9zdGNvZGVcIik7XHJcbiAgICBpZiAocG9zdGNvZGUgPT0gbnVsbCkge1xyXG4gICAgICAgIHJldHVybiBwYXRoICsgcXVlcnlTdHJpbmc7XHJcbiAgICB9XHJcbiAgICBwb3N0Y29kZSA9IHBvc3Rjb2RlLnJlcGxhY2UoL1thLXpBLVpdKyQvLCBcIlwiKTtcclxuICAgIHF1ZXJ5UGFyYW1zLnNldChcInBvc3Rjb2RlXCIsIHBvc3Rjb2RlKTtcclxuXHJcbiAgICBxdWVyeVBhcmFtcy5kZWxldGUoXCJsYXRpdHVkZVwiKTtcclxuICAgIHF1ZXJ5UGFyYW1zLmRlbGV0ZShcImxvbmdpdHVkZVwiKTtcclxuICAgIC8vIGFkbWluRGlzdHJpY3QgZ2V0cyBhIHBhc3NcclxuXHJcbiAgICBjb25zdCBuZXdRdWVyeVBhcmFtcyA9IHF1ZXJ5UGFyYW1zLnRvU3RyaW5nKCk7XHJcbiAgICByZXR1cm4gcGF0aCArIFwiP1wiICsgbmV3UXVlcnlQYXJhbXM7XHJcbn0iXX0=\n","/**\n * Cookie functions\n * ================\n *\n * Used by the cookie banner component and cookies page pattern.\n *\n * Includes function `Cookie()` for getting, setting, and deleting cookies, and\n * functions to manage the users' consent to cookies.\n *\n * Note: there is an inline script in cookie-banner.njk to show the banner\n * as soon as possible, to avoid a high Cumulative Layout Shift (CLS) score.\n * The consent cookie version is defined in cookie-banner.njk\n */\nimport Analytics from './analytics.js';\n/* Name of the cookie to save users cookie preferences to. */\nvar CONSENT_COOKIE_NAME = 'service_directory_cookies_policy';\n/* Users can (dis)allow different groups of cookies. */\n/*todo: different set of cookies we'll need to delete for GA4*/\nvar COOKIE_CATEGORIES = {\n    analytics: ['_ga', '_ga_' + global.GA_MEASUREMENT_ID],\n    /* Essential cookies\n     *\n     * Essential cookies cannot be deselected, but we want our cookie code to\n     * only allow adding cookies that are documented in this object, so they need\n     * to be added here.\n     */\n    essential: ['service_directory_cookies_policy']\n};\n/*\n * Default cookie preferences if user has no cookie preferences.\n *\n * Note that this doesn't include a key for essential cookies, essential\n * cookies cannot be disallowed. If the object contains { essential: false }\n * this will be ignored.\n */\nvar DEFAULT_COOKIE_CONSENT = {\n    analytics: false\n};\n/*\n * Set, get, and delete cookies.\n *\n * Usage:\n *\n *   Setting a cookie:\n *   Cookie('hobnob', 'tasty', { days: 30 })\n *\n *   Reading a cookie:\n *   Cookie('hobnob')\n *\n *   Deleting a cookie:\n *   Cookie('hobnob', null)\n */\nexport function Cookie(name, value, options) {\n    if (typeof value !== 'undefined') {\n        if (value === false || value === null) {\n            deleteCookie(name);\n        }\n        else {\n            // Default expiry date of 30 days\n            if (typeof options === 'undefined') {\n                options = { days: 30 };\n            }\n            setCookie(name, value, options);\n        }\n    }\n    else {\n        return getCookie(name);\n    }\n}\n/** Return the user's cookie preferences.\n *\n * If the consent cookie is malformed, or not present,\n * returns null.\n */\nexport function getConsentCookie() {\n    var consentCookie = getCookie(CONSENT_COOKIE_NAME);\n    var consentCookieObj;\n    if (consentCookie) {\n        try {\n            consentCookieObj = JSON.parse(consentCookie);\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n    return consentCookieObj;\n}\n/** Check the cookie preferences object.\n *\n * If the consent object is not present, malformed, or incorrect version,\n * returns false, otherwise returns true.\n *\n * This is also duplicated in cookie-banner.njk - the two need to be kept in sync\n */\nexport function isValidConsentCookie(options) {\n    return (options && options.version >= window.GDS_CONSENT_COOKIE_VERSION);\n}\n/** Update the user's cookie preferences. */\nexport function setConsentCookie(options) {\n    var cookieConsent = getConsentCookie();\n    if (!cookieConsent) {\n        cookieConsent = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    // Merge current cookie preferences and new preferences\n    for (var option in options) {\n        cookieConsent[option] = options[option];\n    }\n    // Essential cookies cannot be deselected, ignore this cookie type\n    delete cookieConsent.essential;\n    cookieConsent.version = window.GDS_CONSENT_COOKIE_VERSION;\n    // Set the consent cookie\n    setCookie(CONSENT_COOKIE_NAME, JSON.stringify(cookieConsent), { days: 365 });\n    // Update the other cookies\n    resetCookies();\n}\n/** Apply the user's cookie preferences\n *\n * Deletes any cookies the user has not consented to.\n */\nexport function resetCookies() {\n    var options = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(options)) {\n        options = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    for (var cookieType in options) {\n        if (cookieType === 'version') {\n            continue;\n        }\n        // Essential cookies cannot be deselected, ignore this cookie type\n        if (cookieType === 'essential') {\n            continue;\n        }\n        /* if we don't enable/disable straight away, it means that analytics won't be enabled or disabled until the next page get/refresh */\n        /* that's not a biggie when enabling analytics, but we really should stop gathering analytics as soon as possible if the user withdraws their permission */\n        const analyticsAllowed = (cookieType === 'analytics' && options[cookieType]);\n        //todo: create our own gtag.d.ts, or use something like @types/gtag.js npm package?\n        // enable / disable analytics\n        gtag('config', global.GA_MEASUREMENT_ID, {\n            'send_page_view': analyticsAllowed\n        });\n        // todo: check we don't remove the pii safe page_path\n        // if we do, we can try just changing the setting, rather than reconfiguring the whole GA, e.g. \n        // gtag('set', { 'send_page_view': false });\n        if (analyticsAllowed) {\n            Analytics(global.GA_MEASUREMENT_ID);\n        }\n        if (!options[cookieType]) {\n            // Fetch the cookies in that category\n            var cookiesInCategory = COOKIE_CATEGORIES[cookieType];\n            cookiesInCategory.forEach(function (cookie) {\n                // Delete cookie\n                Cookie(cookie, null);\n            });\n        }\n    }\n}\nfunction userAllowsCookieCategory(cookieCategory, cookiePreferences) {\n    // Essential cookies are always allowed\n    if (cookieCategory === 'essential') {\n        return true;\n    }\n    // Sometimes cookiePreferences is malformed in some of the tests, so we need to handle these\n    try {\n        return cookiePreferences[cookieCategory];\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n}\nfunction userAllowsCookie(cookieName) {\n    // Always allow setting the consent cookie\n    if (cookieName === CONSENT_COOKIE_NAME) {\n        return true;\n    }\n    // Get the current cookie preferences\n    var cookiePreferences = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(cookiePreferences)) {\n        cookiePreferences = DEFAULT_COOKIE_CONSENT;\n    }\n    for (var category in COOKIE_CATEGORIES) {\n        var cookiesInCategory = COOKIE_CATEGORIES[category];\n        if (cookiesInCategory.indexOf(cookieName) !== '-1') {\n            return userAllowsCookieCategory(category, cookiePreferences);\n        }\n    }\n    // Deny the cookie if it is not known to us\n    return false;\n}\nfunction getCookie(name) {\n    var nameEQ = name + '=';\n    var cookies = document.cookie.split(';');\n    for (var i = 0, len = cookies.length; i < len; i++) {\n        var cookie = cookies[i];\n        while (cookie.charAt(0) === ' ') {\n            cookie = cookie.substring(1, cookie.length);\n        }\n        if (cookie.indexOf(nameEQ) === 0) {\n            return decodeURIComponent(cookie.substring(nameEQ.length));\n        }\n    }\n    return null;\n}\n// do we need to set the domain?\nfunction setCookie(name, value, options) {\n    if (userAllowsCookie(name)) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        var cookieString = name + '=' + value + '; path=/; SameSite=Strict';\n        if (options.days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (options.days * 24 * 60 * 60 * 1000));\n            cookieString = cookieString + '; expires=' + date.toUTCString();\n        }\n        if (document.location.protocol === 'https:') {\n            cookieString = cookieString + '; Secure';\n        }\n        document.cookie = cookieString;\n    }\n}\nfunction deleteCookie(name) {\n    if (Cookie(name)) {\n        // Cookies need to be deleted in the same level of specificity in which they were set\n        // If a cookie was set with a specified domain, it needs to be specified when deleted\n        // If a cookie wasn't set with the domain attribute, it shouldn't be there when deleted\n        // You can't tell if a cookie was set with a domain attribute or not, so try both options\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + window.location.hostname + ';path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=.' + window.location.hostname + ';path=/';\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\n * This seems to fail in IE8, requires more investigation.\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\n */\nfunction nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n        return nodes.forEach(callback);\n    }\n    for (var i = 0; i < nodes.length; i++) {\n        callback.call(window, nodes[i], i, nodes);\n    }\n}\nexport { nodeListForEach };\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaGVscGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFDSCxTQUFTLGVBQWUsQ0FBQyxLQUFLLEVBQUUsUUFBUTtJQUNwQyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7S0FDakM7SUFDRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNuQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFBO0tBQzVDO0FBQ0wsQ0FBQztBQUVELE9BQU8sRUFDSCxlQUFlLEVBQ2xCLENBQUEiLCJmaWxlIjoiY29tcG9uZW50cy9oZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoaXMgc2VlbXMgdG8gZmFpbCBpbiBJRTgsIHJlcXVpcmVzIG1vcmUgaW52ZXN0aWdhdGlvbi5cclxuICogU2VlOiBodHRwczovL2dpdGh1Yi5jb20vaW1hZ2l0YW1hL25vZGVsaXN0LWZvcmVhY2gtcG9seWZpbGxcclxuICovXHJcbmZ1bmN0aW9uIG5vZGVMaXN0Rm9yRWFjaChub2RlcywgY2FsbGJhY2spIHtcclxuICAgIGlmICh3aW5kb3cuTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcclxuICAgICAgICByZXR1cm4gbm9kZXMuZm9yRWFjaChjYWxsYmFjaylcclxuICAgIH1cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjYWxsYmFjay5jYWxsKHdpbmRvdywgbm9kZXNbaV0sIGksIG5vZGVzKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge1xyXG4gICAgbm9kZUxpc3RGb3JFYWNoXHJcbn0iXX0=\n","import * as CookieFunctions from './cookie-functions.js';\n/*todo: we don't meed a pollyfill for bind, as long as we server up the non js version of the site for ie8 (https://caniuse.com/?search=bind) */\n/*import 'govuk-frontend/govuk/vendor/polyfills/Function/prototype/bind'*/\n/*todo: i think we're ok for this too (see above about ie8), but we _might_ need it for >8 ie (use? https://www.npmjs.com/package/events-polyfill)*/\n/*import 'govuk-frontend/govuk/vendor/polyfills/Event'*/\nimport { nodeListForEach } from './helpers.js';\nvar cookieBannerAcceptSelector = '.js-cookie-banner-accept';\nvar cookieBannerRejectSelector = '.js-cookie-banner-reject';\nvar cookieBannerHideButtonSelector = '.js-cookie-banner-hide';\nvar cookieMessageSelector = '.js-cookie-banner-message';\nvar cookieConfirmationAcceptSelector = '.js-cookie-banner-confirmation-accept';\nvar cookieConfirmationRejectSelector = '.js-cookie-banner-confirmation-reject';\nfunction CookieBanner($module) {\n    this.$module = $module;\n}\nCookieBanner.prototype.init = function () {\n    this.$cookieBanner = this.$module;\n    this.$acceptButton = this.$module.querySelector(cookieBannerAcceptSelector);\n    this.$rejectButton = this.$module.querySelector(cookieBannerRejectSelector);\n    this.$cookieMessage = this.$module.querySelector(cookieMessageSelector);\n    this.$cookieConfirmationAccept = this.$module.querySelector(cookieConfirmationAcceptSelector);\n    this.$cookieConfirmationReject = this.$module.querySelector(cookieConfirmationRejectSelector);\n    this.$cookieBannerHideButtons = this.$module.querySelectorAll(cookieBannerHideButtonSelector);\n    // Exit if no cookie banner module\n    // or if we're on the cookies page to avoid circular journeys\n    if (!this.$cookieBanner || this.onCookiesPage()) {\n        return;\n    }\n    // Show the cookie banner to users who have not consented or have an\n    // outdated consent cookie\n    var currentConsentCookie = CookieFunctions.getConsentCookie();\n    if (!currentConsentCookie || !CookieFunctions.isValidConsentCookie(currentConsentCookie)) {\n        // If the consent cookie version is not valid, we need to remove any cookies which have been\n        // set previously\n        CookieFunctions.resetCookies();\n        this.$cookieBanner.removeAttribute('hidden');\n    }\n    this.$acceptButton.addEventListener('click', this.acceptCookies.bind(this));\n    this.$rejectButton.addEventListener('click', this.rejectCookies.bind(this));\n    nodeListForEach(this.$cookieBannerHideButtons, function ($cookieBannerHideButton) {\n        $cookieBannerHideButton.addEventListener('click', this.hideBanner.bind(this));\n    }.bind(this));\n};\nCookieBanner.prototype.hideBanner = function () {\n    this.$cookieBanner.setAttribute('hidden', true);\n};\nCookieBanner.prototype.acceptCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: true });\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationAccept);\n};\nCookieBanner.prototype.rejectCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: false });\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationReject);\n};\nCookieBanner.prototype.revealConfirmationMessage = function (confirmationMessage) {\n    confirmationMessage.removeAttribute('hidden');\n    // Set tabindex to -1 to make the confirmation banner focusable with JavaScript\n    if (!confirmationMessage.getAttribute('tabindex')) {\n        confirmationMessage.setAttribute('tabindex', '-1');\n        confirmationMessage.addEventListener('blur', function () {\n            confirmationMessage.removeAttribute('tabindex');\n        });\n    }\n    confirmationMessage.focus();\n};\nCookieBanner.prototype.onCookiesPage = function () {\n    return window.location.pathname === '/cookies/';\n};\nexport default CookieBanner;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import { getConsentCookie, setConsentCookie } from './cookie-functions.js';\nimport { nodeListForEach } from './helpers.js';\nfunction CookiesPage($module) {\n    this.$module = $module;\n}\nCookiesPage.prototype.init = function () {\n    this.$cookiePage = this.$module;\n    if (!this.$cookiePage) {\n        return;\n    }\n    this.$cookieForm = this.$cookiePage.querySelector('.js-cookies-page-form');\n    this.$cookieFormFieldsets = this.$cookieForm.querySelectorAll('.js-cookies-page-form-fieldset');\n    this.$successNotification = this.$cookiePage.querySelector('.js-cookies-page-success');\n    this.$successLink = this.$cookiePage.querySelector('.js-cookies-page-success-link');\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        this.showUserPreference($cookieFormFieldset, getConsentCookie());\n        /*        $cookieFormFieldset.removeAttribute('hidden')*/\n    }.bind(this));\n    // Show submit button\n    //this.$cookieForm.querySelector('.js-cookies-form-button').removeAttribute('hidden')\n    this.$cookieForm.addEventListener('submit', this.savePreferences.bind(this));\n};\nCookiesPage.prototype.savePreferences = function (event) {\n    // Stop default form submission behaviour\n    event.preventDefault();\n    var preferences = {};\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        var cookieType = this.getCookieType($cookieFormFieldset);\n        var selectedItem = $cookieFormFieldset.querySelector('input[name=' + cookieType + ']:checked').value;\n        preferences[cookieType] = selectedItem === 'true';\n    }.bind(this));\n    // Save preferences to cookie and show success notification\n    setConsentCookie(preferences);\n    // handle the corner case, where the user has selected their preference on the cookie page, whilst the banner is still open as they haven't previously selected their preference\n    //todo: call hideBanner\n    var banner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    banner.setAttribute('hidden', 'true');\n    this.showSuccessNotification();\n};\nCookiesPage.prototype.showUserPreference = function ($cookieFormFieldset, preferences) {\n    var cookieType = this.getCookieType($cookieFormFieldset);\n    var preference = false;\n    if (cookieType && preferences && preferences[cookieType] !== undefined) {\n        preference = preferences[cookieType];\n    }\n    var radioValue = preference ? 'true' : 'false';\n    var radio = $cookieFormFieldset.querySelector('input[name=' + cookieType + '][value=' + radioValue + ']');\n    radio.checked = true;\n};\nCookiesPage.prototype.showSuccessNotification = function () {\n    this.$successNotification.removeAttribute('hidden');\n    // if the user's come to the cookies page through the link in the cookie banner, show a link to take them back to the page they came from\n    var referrer = document.referrer ? new URL(document.referrer).pathname : false;\n    if (referrer && referrer !== document.location.pathname) {\n        this.$successLink.href = referrer;\n        this.$successLink.removeAttribute('hidden');\n    }\n    else {\n        this.$successLink.setAttribute('hidden', 'true');\n    }\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // GOV.UK Frontend will remove the tabindex on blur as the component doesn't\n    // need to be focusable after the user has read the text.\n    if (!this.$successNotification.getAttribute('tabindex')) {\n        this.$successNotification.setAttribute('tabindex', '-1');\n    }\n    this.$successNotification.focus();\n    // scroll to the top of the page\n    window.scrollTo(0, 0);\n};\nCookiesPage.prototype.getCookieType = function ($cookieFormFieldset) {\n    return $cookieFormFieldset.id;\n};\nexport default CookiesPage;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// js components have been snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/\nimport CookieBanner from './components/cookie-banner.js';\nimport { getConsentCookie, isValidConsentCookie } from './components/cookie-functions.js';\nimport Analytics from './components/analytics.js';\nimport CookiesPage from './components/cookies-page.js';\n// Initialise cookie banner\nvar $cookieBanner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\nnew CookieBanner($cookieBanner).init();\n// Initialise analytics if consent is given\nvar userConsent = getConsentCookie();\nif (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics) {\n    Analytics(global.GA_MEASUREMENT_ID);\n}\n//todo: move this into scripts section on cookie page\n// Initialise cookie page\nvar $cookiesPage = document.querySelector('[data-module=\"app-cookies-page\"]');\nnew CookiesPage($cookiesPage).init();\nconst backLinks = document.querySelectorAll(\".app-back-link\");\nbackLinks.forEach((link) => {\n    link.addEventListener(\"click\", () => {\n        window.history.back();\n    });\n});\nconst button = document.getElementById('open-close-filters');\nbutton === null || button === void 0 ? void 0 : button.addEventListener('click', function handleClick(event) {\n    //todo: update to ts 2?\n    const filterButton = document.getElementById(\"filters\");\n    if (filterButton.style.display === \"none\") {\n        filterButton.style.display = \"block\";\n    }\n    else {\n        filterButton.style.display = \"none\";\n    }\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4SEFBOEg7QUFTOUgsT0FBTyxZQUFZLE1BQU0sK0JBQStCLENBQUE7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFDekYsT0FBTyxTQUFTLE1BQU0sMkJBQTJCLENBQUE7QUFDakQsT0FBTyxXQUFXLE1BQU0sOEJBQThCLENBQUE7QUFFdEQsMkJBQTJCO0FBQzNCLElBQUksYUFBYSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMscUNBQXFDLENBQUMsQ0FBQTtBQUNqRixJQUFJLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtBQUV0QywyQ0FBMkM7QUFDM0MsSUFBSSxXQUFXLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztBQUNyQyxJQUFJLFdBQVcsSUFBSSxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFO0lBQzNFLFNBQVMsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztDQUN2QztBQUVELHFEQUFxRDtBQUNyRCx5QkFBeUI7QUFDekIsSUFBSSxZQUFZLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFBO0FBQzdFLElBQUksV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0FBRXBDLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQzlELFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUF1QixFQUFFLEVBQUU7SUFDMUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUU7UUFDaEMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMxQixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0FBQzdELE1BQU0sYUFBTixNQUFNLHVCQUFOLE1BQU0sQ0FBRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsU0FBUyxXQUFXLENBQUMsS0FBSztJQUN4RCx1QkFBdUI7SUFDdkIsTUFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQTBCLENBQUM7SUFDakYsSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUU7UUFDdkMsWUFBWSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0tBQ3hDO1NBQU07UUFDSCxZQUFZLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7S0FDdkM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqcyBjb21wb25lbnRzIGhhdmUgYmVlbiBzbmFmZmxlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hbHBoYWdvdi9nb3Z1ay1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9zcmMvamF2YXNjcmlwdHMvY29tcG9uZW50cy9cclxuXHJcbmRlY2xhcmUgZ2xvYmFsIHtcclxuICAgIGludGVyZmFjZSBXaW5kb3cge1xyXG4gICAgICAgIEdEU19DT05TRU5UX0NPT0tJRV9WRVJTSU9OOiBhbnk7XHJcbiAgICAgICAgR0FfTUVBU1VSRU1FTlRfSUQ6IHN0cmluZztcclxuICAgIH1cclxufVxyXG5cclxuaW1wb3J0IENvb2tpZUJhbm5lciBmcm9tICcuL2NvbXBvbmVudHMvY29va2llLWJhbm5lci5qcydcclxuaW1wb3J0IHsgZ2V0Q29uc2VudENvb2tpZSwgaXNWYWxpZENvbnNlbnRDb29raWUgfSBmcm9tICcuL2NvbXBvbmVudHMvY29va2llLWZ1bmN0aW9ucy5qcydcclxuaW1wb3J0IEFuYWx5dGljcyBmcm9tICcuL2NvbXBvbmVudHMvYW5hbHl0aWNzLmpzJ1xyXG5pbXBvcnQgQ29va2llc1BhZ2UgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZXMtcGFnZS5qcydcclxuXHJcbi8vIEluaXRpYWxpc2UgY29va2llIGJhbm5lclxyXG52YXIgJGNvb2tpZUJhbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1vZHVsZT1cImdvdnVrLWNvb2tpZS1iYW5uZXJcIl0nKVxyXG5uZXcgQ29va2llQmFubmVyKCRjb29raWVCYW5uZXIpLmluaXQoKVxyXG5cclxuLy8gSW5pdGlhbGlzZSBhbmFseXRpY3MgaWYgY29uc2VudCBpcyBnaXZlblxyXG52YXIgdXNlckNvbnNlbnQgPSBnZXRDb25zZW50Q29va2llKCk7XHJcbmlmICh1c2VyQ29uc2VudCAmJiBpc1ZhbGlkQ29uc2VudENvb2tpZSh1c2VyQ29uc2VudCkgJiYgdXNlckNvbnNlbnQuYW5hbHl0aWNzKSB7XHJcbiAgICBBbmFseXRpY3MoZ2xvYmFsLkdBX01FQVNVUkVNRU5UX0lEKTtcclxufVxyXG5cclxuLy90b2RvOiBtb3ZlIHRoaXMgaW50byBzY3JpcHRzIHNlY3Rpb24gb24gY29va2llIHBhZ2VcclxuLy8gSW5pdGlhbGlzZSBjb29raWUgcGFnZVxyXG52YXIgJGNvb2tpZXNQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiYXBwLWNvb2tpZXMtcGFnZVwiXScpXHJcbm5ldyBDb29raWVzUGFnZSgkY29va2llc1BhZ2UpLmluaXQoKVxyXG5cclxuY29uc3QgYmFja0xpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hcHAtYmFjay1saW5rXCIpO1xyXG5iYWNrTGlua3MuZm9yRWFjaCgobGluazogSFRNTEFuY2hvckVsZW1lbnQpID0+IHtcclxuICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5jb25zdCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3Blbi1jbG9zZS1maWx0ZXJzJyk7XHJcbmJ1dHRvbj8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCkge1xyXG4gICAgLy90b2RvOiB1cGRhdGUgdG8gdHMgMj9cclxuICAgIGNvbnN0IGZpbHRlckJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyc1wiKSBhcyBIVE1MRGl2RWxlbWVudCB8IG51bGw7XHJcbiAgICBpZiAoZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiKSB7XHJcbiAgICAgICAgZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZpbHRlckJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=\n"]}