{"version":3,"sources":["tmp/js/components/analytics.js","tmp/js/components/cookie-functions.js","tmp/js/components/helpers.js","tmp/js/components/cookie-banner.js","tmp/js/components/cookies-page.js","tmp/js/app.js"],"names":["gtag","command","args","window","dataLayer","push","arguments","GaMeasurementId","initAnalytics","gaMeasurementId","Boolean","loadGaScript","Date","pageViewParams","getPiiSafePageView","send_page_view","page_path","page_location","page_referrer","referrer","cookie_flags","sendPageViewEvent","sendFilterPageCustomEvent","element","document","getElementById","totalResults","getAttribute","undefined","total_results","sendAnalyticsCustomEvent","accepted","source","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","pageView","page_title","title","send_to","piiSafeReferrerQueryString","getPiiSafeQueryString","URL","search","urlArray","split","piiSafeQueryString","location","href","pathname","queryString","queryParams","URLSearchParams","postcode","get","replace","set","delete","toString","CONSENT_COOKIE_NAME","COOKIE_CATEGORIES","analytics","GA_CONTAINER_ID","essential","DEFAULT_COOKIE_CONSENT","Cookie","name","value","options","getCookie","deleteCookie","days","setCookie","getConsentCookie","consentCookieObj","consentCookie","JSON","parse","err","isValidConsentCookie","version","GDS_CONSENT_COOKIE_VERSION","setConsentCookie","cookieConsent","option","stringify","resetCookies","cookieType","GA_MEASUREMENT_ID","forEach","cookie","userAllowsCookieCategory","cookieCategory","cookiePreferences","e","console","error","userAllowsCookie","cookieName","category","indexOf","nameEQ","cookies","i","len","length","charAt","substring","decodeURIComponent","cookieString","date","setTime","getTime","toUTCString","protocol","hostname","nodeListForEach","nodes","callback","NodeList","prototype","call","cookieBannerAcceptSelector","cookieBannerRejectSelector","cookieBannerHideButtonSelector","cookieMessageSelector","cookieConfirmationAcceptSelector","cookieConfirmationRejectSelector","CookieBanner","$module","this","CookiesPage","init","$cookieBanner","$acceptButton","querySelector","$rejectButton","$cookieMessage","$cookieConfirmationAccept","$cookieConfirmationReject","$cookieBannerHideButtons","querySelectorAll","onCookiesPage","currentConsentCookie","CookieFunctions.getConsentCookie","CookieFunctions.isValidConsentCookie","CookieFunctions.resetCookies","removeAttribute","addEventListener","acceptCookies","bind","rejectCookies","$cookieBannerHideButton","hideBanner","setAttribute","CookieFunctions.setConsentCookie","revealConfirmationMessage","confirmationMessage","focus","$cookiePage","$cookieForm","$cookieFormFieldsets","$successNotification","$successLink","$cookieFormFieldset","showUserPreference","savePreferences","event","preventDefault","preferences","getCookieType","selectedItem","showSuccessNotification","preference","radioValue","checked","scrollTo","id","userConsent","$cookiesPage","backLinks","link","history","back","button","filterButton","style","display"],"mappings":"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","file":"app.js","sourcesContent":["function gtag(command, ...args) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push(arguments);\n}\nlet GaMeasurementId = '';\n//todo: use prototype? (or class?)\nexport default function initAnalytics(gaMeasurementId) {\n    // if the environment doesn't have a measurement id, don't load analytics\n    if (!Boolean(gaMeasurementId)) {\n        return;\n    }\n    GaMeasurementId = gaMeasurementId;\n    loadGaScript(gaMeasurementId);\n    gtag('js', new Date());\n    const pageViewParams = getPiiSafePageView(gaMeasurementId);\n    // set the config for auto generated events other than page_view\n    gtag('config', gaMeasurementId, {\n        send_page_view: false,\n        page_path: pageViewParams.page_path,\n        page_location: pageViewParams.page_location,\n        page_referrer: pageViewParams.referrer,\n        cookie_flags: 'secure'\n    });\n}\nexport function sendPageViewEvent() {\n    // send the page_view event manually (https://developers.google.com/analytics/devguides/collection/gtagjs/pages#default_behavior)\n    gtag('event', 'page_view', getPiiSafePageView(GaMeasurementId));\n}\nexport function sendFilterPageCustomEvent() {\n    //todo: make filter page only\n    const element = document.getElementById('results');\n    const totalResults = element === null || element === void 0 ? void 0 : element.getAttribute('data-total-results');\n    if (totalResults === undefined)\n        return;\n    gtag('event', 'filter_page', {\n        'total_results': totalResults\n    });\n}\n//todo: or accepted|rejected\nexport function sendAnalyticsCustomEvent(accepted, source) {\n    gtag('event', 'analytics', {\n        'accepted': accepted,\n        'source': source\n    });\n}\n//todo: having an object (prototype/class) will ensure that GaMeasurementId will have already been set\nexport function disableAnalytics() {\n    //gtag('config', GaMeasurementId, {\n    //    'allow_ad_personalization_signals': false,\n    //    'allow_google_signals': false,\n    //    'scroll_threshold': 0,\n    //    'link_attribution': false\n    //});\n    //gtag('set', {\n    //    'allow_google_signals': false,\n    //    'custom_map': {\n    //        'scroll': 'non_interaction'\n    //    }\n    //});\n    // this kills our custom event, but not ga4's own events which must be caching the measurement id\n    //window.dataLayer = [];\n    //gtag('config', '');\n    //todo: when get working, ensure our own custom events and manual page_view events are not sent\n    // in theory these should be enough to disable analytics. has it already checked these at load time rather than at send time?\n    //window['ga-disable-' + GaMeasurementId] = true;\n    //window[\"_gaUserPrefs\"] = { ioo() { return true; } }\n    //possible options\n    // send the custom event without loading the gtag script. possible?? not easily, and not maintainable\n    // blatt the measurement id in the config? doesn't work - caching?\n    // replace a central function in the gtag script? not maintainable?\n    // issues:\n    // gtag operates async, so how do we know when it's sent the custom event\n    // we don't want a race condition (if we can disable ga4)\n    // could use a promise\n    // or could use a callback: https://developers.google.com/tag-platform/gtagjs/reference/parameters\n    //window.dataLayer.push({\n    //    'event': 'ga-disable',\n    //    'ga-disable': true\n    //});\n    //todo: unload the loaded script??\n    //    const gtagScript = document.querySelector('script[src^=\"https://www.googletagmanager.com/gtag/js\"]');\n    //    if (gtagScript) {\n    //        gtagScript.remove();\n    //    }\n    //}; aa.sl = function (a) { var b = this, c = TA(a); c ? Mh(c, function (d) { b.Eg(a, 1 === d.split(\"~\").length ? void 0 : d) }) : this.Eg(a) }; var WB = function (a, b, c) { var d = a + \"?\" + b; Lk(\"Sending request: \" + d); if (c) { Lk(\"  Request body: \" + c); try { oc.sendBeacon && oc.sendBeacon(d, c) } catch (e) { xb(\"TAGGING\", 15) } } else Fc(d) }, bC = Qm('', 500), cC = Qm('',\n    //    5E3), aC = !0; var dC = window, eC = document, fC = function (a) { var b = dC._gaUserPrefs; if (b && b.ioo && b.ioo() || a && !0 === dC[\"ga-disable-\" + a]) return !0; try { var c = dC.external; if (c && c._gaUserPrefs && \"oo\" == c._gaUserPrefs) return !0 } catch (f) { } for (var d = Uk(\"AMP_TOKEN\", String(eC.cookie), !0), e = 0; e < d.length; e++)if (\"$OPT_OUT\" == d[e]) return !0; return eC.getElementById(\"__gaOptOutExtension\") ? !0 : !1 };\n    /*\n    \r\n    function (a) { var b = dC._gaUserPrefs; if (b && b.ioo && b.ioo() || a && !0 === dC[\"ga-disable-\" + a]) return !0;\n    \r\n        function (a)\n        var dC = window\n            !0 === dC[\"ga-disable-\" + a]) return !0\n    \r\n            chat-gpt's interpretation of the code...\n    \r\n    This is a function in Google Analytics 4 (GA4) that is used to check if tracking is enabled or disabled for a specific user.\n    \r\n    Here's what the code is doing:\n    \r\n    The function takes an argument a which represents the tracking ID (or \"measurement ID\" in GA4 terminology) for the Google Analytics property being tracked.\n    The function then checks if the user has enabled or disabled tracking for themselves. This is done by checking a variable called _gaUserPrefs which is set by the user's browser.\n    If _gaUserPrefs is defined and has a method called ioo that returns true, it means the user has disabled tracking for themselves. The function returns true to indicate that tracking is disabled.\n    If the a argument is provided and there is a cookie called \"ga-disable-[measurement ID]\" that is set to true, it means the user has explicitly disabled tracking for that particular property. The function returns true to indicate that tracking is disabled.\n    If neither of the above conditions are met, the function returns false to indicate that tracking is enabled for the user.\n    Overall, this function is used to determine if tracking is enabled or disabled for a specific user in GA4, based on the user's preferences and any explicit settings they may have set.\n    \r\n    setting a property on window doesn't create a cookie, chat-gpt was hallucinating\n    \r\n            */\n}\nfunction loadGaScript(gaMeasurementId) {\n    const f = document.getElementsByTagName('script')[0];\n    const j = document.createElement('script');\n    j.async = true;\n    j.src = 'https://www.googletagmanager.com/gtag/js?id=' + gaMeasurementId;\n    f.parentNode.insertBefore(j, f);\n}\nfunction getPiiSafePageView(gaMeasurementId) {\n    const pageView = {\n        page_title: document.title,\n        send_to: gaMeasurementId,\n        referrer: '',\n        page_location: '',\n        page_path: ''\n    };\n    //todo: set as referrer or page_referrer in pageView - does it matter? is it only picking it up from the config?\n    //todo: get piisafe referrer function\n    if (document.referrer !== '') {\n        const referrerUrl = new URL(document.referrer);\n        const piiSafeReferrerQueryString = getPiiSafeQueryString(referrerUrl.search);\n        if (piiSafeReferrerQueryString == null) {\n            pageView.referrer = document.referrer;\n        }\n        else {\n            const urlArray = document.referrer.split(\"?\");\n            pageView.referrer = urlArray[0] + piiSafeReferrerQueryString;\n        }\n    }\n    const piiSafeQueryString = getPiiSafeQueryString(window.location.search);\n    if (piiSafeQueryString == null) {\n        pageView.page_location = window.location.href;\n        pageView.page_path = window.location.pathname + window.location.search;\n        return pageView;\n    }\n    const urlArray = window.location.href.split(\"?\");\n    pageView.page_location = urlArray[0] + piiSafeQueryString;\n    pageView.page_path = window.location.pathname + piiSafeQueryString;\n    return pageView;\n}\nfunction getPiiSafeQueryString(queryString) {\n    //todo: for safety, convert to lowercase, so that if the user changes the case of the url, we still don't collect pii\n    const queryParams = new URLSearchParams(queryString);\n    let postcode = queryParams.get(\"postcode\");\n    if (postcode == null) {\n        // null indicates original query params were already pii safe\n        return null;\n    }\n    postcode = postcode.replace(/[a-zA-Z]+$/, \"\");\n    queryParams.set(\"postcode\", postcode);\n    queryParams.delete(\"latitude\");\n    queryParams.delete(\"longitude\");\n    return '?' + queryParams.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\n * Cookie functions\n * ================\n *\n * Used by the cookie banner component and cookies page pattern.\n *\n * Includes function `Cookie()` for getting, setting, and deleting cookies, and\n * functions to manage the users' consent to cookies.\n *\n * Note: there is an inline script in cookie-banner.njk to show the banner\n * as soon as possible, to avoid a high Cumulative Layout Shift (CLS) score.\n * The consent cookie version is defined in cookie-banner.njk\n */\nimport initAnalytics from './analytics.js';\n/* Name of the cookie to save users cookie preferences to. */\nvar CONSENT_COOKIE_NAME = 'service_directory_cookies_policy';\n/* Users can (dis)allow different groups of cookies. */\nvar COOKIE_CATEGORIES = {\n    analytics: ['_ga', '_ga_' + window.GA_CONTAINER_ID],\n    /* Essential cookies\n     *\n     * Essential cookies cannot be deselected, but we want our cookie code to\n     * only allow adding cookies that are documented in this object, so they need\n     * to be added here.\n     */\n    essential: ['service_directory_cookies_policy']\n};\n/*\n * Default cookie preferences if user has no cookie preferences.\n *\n * Note that this doesn't include a key for essential cookies, essential\n * cookies cannot be disallowed. If the object contains { essential: false }\n * this will be ignored.\n */\nvar DEFAULT_COOKIE_CONSENT = {\n    analytics: false\n};\n/*\n * Set, get, and delete cookies.\n *\n * Usage:\n *\n *   Setting a cookie:\n *   Cookie('hobnob', 'tasty', { days: 30 })\n *\n *   Reading a cookie:\n *   Cookie('hobnob')\n *\n *   Deleting a cookie:\n *   Cookie('hobnob', null)\n */\nexport function Cookie(name, value, options) {\n    if (typeof value !== 'undefined') {\n        if (value === false || value === null) {\n            deleteCookie(name);\n        }\n        else {\n            // Default expiry date of 30 days\n            if (typeof options === 'undefined') {\n                options = { days: 30 };\n            }\n            setCookie(name, value, options);\n        }\n    }\n    else {\n        return getCookie(name);\n    }\n}\n/** Return the user's cookie preferences.\n *\n * If the consent cookie is malformed, or not present,\n * returns null.\n */\nexport function getConsentCookie() {\n    var consentCookie = getCookie(CONSENT_COOKIE_NAME);\n    var consentCookieObj;\n    if (consentCookie) {\n        try {\n            consentCookieObj = JSON.parse(consentCookie);\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n    return consentCookieObj;\n}\n/** Check the cookie preferences object.\n *\n * If the consent object is not present, malformed, or incorrect version,\n * returns false, otherwise returns true.\n *\n * This is also duplicated in cookie-banner.njk - the two need to be kept in sync\n */\nexport function isValidConsentCookie(options) {\n    return (options && options.version >= window.GDS_CONSENT_COOKIE_VERSION);\n}\n/** Update the user's cookie preferences. */\nexport function setConsentCookie(options) {\n    var cookieConsent = getConsentCookie();\n    if (!cookieConsent) {\n        cookieConsent = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    // Merge current cookie preferences and new preferences\n    for (var option in options) {\n        cookieConsent[option] = options[option];\n    }\n    // Essential cookies cannot be deselected, ignore this cookie type\n    delete cookieConsent.essential;\n    cookieConsent.version = window.GDS_CONSENT_COOKIE_VERSION;\n    // Set the consent cookie\n    setCookie(CONSENT_COOKIE_NAME, JSON.stringify(cookieConsent), { days: 365 });\n    // Update the other cookies\n    resetCookies();\n}\n/** Apply the user's cookie preferences\n *\n * Deletes any cookies the user has not consented to.\n */\nexport function resetCookies() {\n    var options = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(options)) {\n        options = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    for (var cookieType in options) {\n        if (cookieType === 'version') {\n            continue;\n        }\n        // Essential cookies cannot be deselected, ignore this cookie type\n        if (cookieType === 'essential') {\n            continue;\n        }\n        //todo: enabling analytics doesn't belong in resetCookies\n        const analyticsAllowed = (cookieType === 'analytics' && options[cookieType]);\n        if (analyticsAllowed) {\n            initAnalytics(window.GA_MEASUREMENT_ID);\n        }\n        if (!options[cookieType]) {\n            // Fetch the cookies in that category\n            var cookiesInCategory = COOKIE_CATEGORIES[cookieType];\n            cookiesInCategory.forEach(function (cookie) {\n                // Delete cookie\n                Cookie(cookie, null);\n            });\n        }\n    }\n}\nfunction userAllowsCookieCategory(cookieCategory, cookiePreferences) {\n    // Essential cookies are always allowed\n    if (cookieCategory === 'essential') {\n        return true;\n    }\n    // Sometimes cookiePreferences is malformed in some of the tests, so we need to handle these\n    try {\n        return cookiePreferences[cookieCategory];\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n}\nfunction userAllowsCookie(cookieName) {\n    // Always allow setting the consent cookie\n    if (cookieName === CONSENT_COOKIE_NAME) {\n        return true;\n    }\n    // Get the current cookie preferences\n    var cookiePreferences = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(cookiePreferences)) {\n        cookiePreferences = DEFAULT_COOKIE_CONSENT;\n    }\n    for (var category in COOKIE_CATEGORIES) {\n        var cookiesInCategory = COOKIE_CATEGORIES[category];\n        if (cookiesInCategory.indexOf(cookieName) !== '-1') {\n            return userAllowsCookieCategory(category, cookiePreferences);\n        }\n    }\n    // Deny the cookie if it is not known to us\n    return false;\n}\nfunction getCookie(name) {\n    var nameEQ = name + '=';\n    var cookies = document.cookie.split(';');\n    for (var i = 0, len = cookies.length; i < len; i++) {\n        var cookie = cookies[i];\n        while (cookie.charAt(0) === ' ') {\n            cookie = cookie.substring(1, cookie.length);\n        }\n        if (cookie.indexOf(nameEQ) === 0) {\n            return decodeURIComponent(cookie.substring(nameEQ.length));\n        }\n    }\n    return null;\n}\n// do we need to set the domain?\nfunction setCookie(name, value, options) {\n    if (userAllowsCookie(name)) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        var cookieString = name + '=' + value + '; path=/; SameSite=Strict';\n        if (options.days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (options.days * 24 * 60 * 60 * 1000));\n            cookieString = cookieString + '; expires=' + date.toUTCString();\n        }\n        if (document.location.protocol === 'https:') {\n            cookieString = cookieString + '; Secure';\n        }\n        document.cookie = cookieString;\n    }\n}\nfunction deleteCookie(name) {\n    if (Cookie(name)) {\n        // Cookies need to be deleted in the same level of specificity in which they were set\n        // If a cookie was set with a specified domain, it needs to be specified when deleted\n        // If a cookie wasn't set with the domain attribute, it shouldn't be there when deleted\n        // You can't tell if a cookie was set with a domain attribute or not, so try both options\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + window.location.hostname + ';path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=.' + window.location.hostname + ';path=/';\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\n * This seems to fail in IE8, requires more investigation.\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\n */\nfunction nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n        return nodes.forEach(callback);\n    }\n    for (var i = 0; i < nodes.length; i++) {\n        callback.call(window, nodes[i], i, nodes);\n    }\n}\nexport { nodeListForEach };\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaGVscGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFDSCxTQUFTLGVBQWUsQ0FBQyxLQUFLLEVBQUUsUUFBUTtJQUNwQyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7S0FDakM7SUFDRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNuQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFBO0tBQzVDO0FBQ0wsQ0FBQztBQUVELE9BQU8sRUFDSCxlQUFlLEVBQ2xCLENBQUEiLCJmaWxlIjoiY29tcG9uZW50cy9oZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoaXMgc2VlbXMgdG8gZmFpbCBpbiBJRTgsIHJlcXVpcmVzIG1vcmUgaW52ZXN0aWdhdGlvbi5cclxuICogU2VlOiBodHRwczovL2dpdGh1Yi5jb20vaW1hZ2l0YW1hL25vZGVsaXN0LWZvcmVhY2gtcG9seWZpbGxcclxuICovXHJcbmZ1bmN0aW9uIG5vZGVMaXN0Rm9yRWFjaChub2RlcywgY2FsbGJhY2spIHtcclxuICAgIGlmICh3aW5kb3cuTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcclxuICAgICAgICByZXR1cm4gbm9kZXMuZm9yRWFjaChjYWxsYmFjaylcclxuICAgIH1cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjYWxsYmFjay5jYWxsKHdpbmRvdywgbm9kZXNbaV0sIGksIG5vZGVzKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge1xyXG4gICAgbm9kZUxpc3RGb3JFYWNoXHJcbn0iXX0=\n","import * as CookieFunctions from './cookie-functions.js';\n/*todo: we don't meed a pollyfill for bind, as long as we server up the non js version of the site for ie8 (https://caniuse.com/?search=bind) */\n/*import 'govuk-frontend/govuk/vendor/polyfills/Function/prototype/bind'*/\n/*todo: i think we're ok for this too (see above about ie8), but we _might_ need it for >8 ie (use? https://www.npmjs.com/package/events-polyfill)*/\n/*import 'govuk-frontend/govuk/vendor/polyfills/Event'*/\nimport { nodeListForEach } from './helpers.js';\nimport { sendPageViewEvent, sendFilterPageCustomEvent, sendAnalyticsCustomEvent, disableAnalytics } from './analytics.js';\nconst cookieBannerAcceptSelector = '.js-cookie-banner-accept';\nconst cookieBannerRejectSelector = '.js-cookie-banner-reject';\nconst cookieBannerHideButtonSelector = '.js-cookie-banner-hide';\nconst cookieMessageSelector = '.js-cookie-banner-message';\nconst cookieConfirmationAcceptSelector = '.js-cookie-banner-confirmation-accept';\nconst cookieConfirmationRejectSelector = '.js-cookie-banner-confirmation-reject';\nexport default function CookieBanner($module) {\n    this.$module = $module;\n}\nCookieBanner.prototype.init = function () {\n    this.$cookieBanner = this.$module;\n    this.$acceptButton = this.$module.querySelector(cookieBannerAcceptSelector);\n    this.$rejectButton = this.$module.querySelector(cookieBannerRejectSelector);\n    this.$cookieMessage = this.$module.querySelector(cookieMessageSelector);\n    this.$cookieConfirmationAccept = this.$module.querySelector(cookieConfirmationAcceptSelector);\n    this.$cookieConfirmationReject = this.$module.querySelector(cookieConfirmationRejectSelector);\n    this.$cookieBannerHideButtons = this.$module.querySelectorAll(cookieBannerHideButtonSelector);\n    // Exit if no cookie banner module\n    // or if we're on the cookies page to avoid circular journeys\n    if (!this.$cookieBanner || this.onCookiesPage()) {\n        return;\n    }\n    // Show the cookie banner to users who have not consented or have an\n    // outdated consent cookie\n    var currentConsentCookie = CookieFunctions.getConsentCookie();\n    if (!currentConsentCookie || !CookieFunctions.isValidConsentCookie(currentConsentCookie)) {\n        // If the consent cookie version is not valid, we need to remove any cookies which have been\n        // set previously\n        CookieFunctions.resetCookies();\n        this.$cookieBanner.removeAttribute('hidden');\n    }\n    this.$acceptButton.addEventListener('click', this.acceptCookies.bind(this));\n    this.$rejectButton.addEventListener('click', this.rejectCookies.bind(this));\n    nodeListForEach(this.$cookieBannerHideButtons, function ($cookieBannerHideButton) {\n        $cookieBannerHideButton.addEventListener('click', this.hideBanner.bind(this));\n    }.bind(this));\n};\nCookieBanner.prototype.hideBanner = function () {\n    this.$cookieBanner.setAttribute('hidden', true);\n};\nCookieBanner.prototype.acceptCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: true });\n    sendAnalyticsCustomEvent(true, 'banner');\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationAccept);\n};\nCookieBanner.prototype.rejectCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: true });\n    sendAnalyticsCustomEvent(false, 'banner');\n    CookieFunctions.setConsentCookie({ analytics: false });\n    disableAnalytics();\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationReject);\n};\nCookieBanner.prototype.revealConfirmationMessage = function (confirmationMessage) {\n    confirmationMessage.removeAttribute('hidden');\n    // Set tabindex to -1 to make the confirmation banner focusable with JavaScript\n    if (!confirmationMessage.getAttribute('tabindex')) {\n        confirmationMessage.setAttribute('tabindex', '-1');\n        confirmationMessage.addEventListener('blur', function () {\n            confirmationMessage.removeAttribute('tabindex');\n        });\n    }\n    confirmationMessage.focus();\n};\nCookieBanner.prototype.onCookiesPage = function () {\n    return window.location.pathname === '/cookies/';\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import { getConsentCookie, setConsentCookie } from './cookie-functions.js';\nimport { nodeListForEach } from './helpers.js';\nimport { sendPageViewEvent, sendAnalyticsCustomEvent } from './analytics.js';\nfunction CookiesPage($module) {\n    this.$module = $module;\n}\nCookiesPage.prototype.init = function () {\n    this.$cookiePage = this.$module;\n    if (!this.$cookiePage) {\n        return;\n    }\n    this.$cookieForm = this.$cookiePage.querySelector('.js-cookies-page-form');\n    this.$cookieFormFieldsets = this.$cookieForm.querySelectorAll('.js-cookies-page-form-fieldset');\n    this.$successNotification = this.$cookiePage.querySelector('.js-cookies-page-success');\n    this.$successLink = this.$cookiePage.querySelector('.js-cookies-page-success-link');\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        this.showUserPreference($cookieFormFieldset, getConsentCookie());\n        /*        $cookieFormFieldset.removeAttribute('hidden')*/\n    }.bind(this));\n    // Show submit button\n    //this.$cookieForm.querySelector('.js-cookies-form-button').removeAttribute('hidden')\n    this.$cookieForm.addEventListener('submit', this.savePreferences.bind(this));\n};\nCookiesPage.prototype.savePreferences = function (event) {\n    // Stop default form submission behaviour\n    event.preventDefault();\n    var preferences = {};\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        var cookieType = this.getCookieType($cookieFormFieldset);\n        var selectedItem = $cookieFormFieldset.querySelector('input[name=' + cookieType + ']:checked').value;\n        preferences[cookieType] = selectedItem === 'true';\n    }.bind(this));\n    // Save preferences to cookie and show success notification\n    setConsentCookie(preferences);\n    sendPageViewEvent();\n    sendAnalyticsCustomEvent(preferences['analytics'], 'cookies');\n    // handle the corner case, where the user has selected their preference on the cookie page, whilst the banner is still open as they haven't previously selected their preference\n    //todo: call hideBanner\n    var banner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    banner.setAttribute('hidden', 'true');\n    this.showSuccessNotification();\n};\nCookiesPage.prototype.showUserPreference = function ($cookieFormFieldset, preferences) {\n    var cookieType = this.getCookieType($cookieFormFieldset);\n    var preference = false;\n    if (cookieType && preferences && preferences[cookieType] !== undefined) {\n        preference = preferences[cookieType];\n    }\n    var radioValue = preference ? 'true' : 'false';\n    var radio = $cookieFormFieldset.querySelector('input[name=' + cookieType + '][value=' + radioValue + ']');\n    radio.checked = true;\n};\nCookiesPage.prototype.showSuccessNotification = function () {\n    this.$successNotification.removeAttribute('hidden');\n    // if the user's come to the cookies page through the link in the cookie banner, show a link to take them back to the page they came from\n    var referrer = document.referrer ? new URL(document.referrer).pathname : false;\n    if (referrer && referrer !== document.location.pathname) {\n        this.$successLink.href = referrer;\n        this.$successLink.removeAttribute('hidden');\n    }\n    else {\n        this.$successLink.setAttribute('hidden', 'true');\n    }\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // GOV.UK Frontend will remove the tabindex on blur as the component doesn't\n    // need to be focusable after the user has read the text.\n    if (!this.$successNotification.getAttribute('tabindex')) {\n        this.$successNotification.setAttribute('tabindex', '-1');\n    }\n    this.$successNotification.focus();\n    // scroll to the top of the page\n    window.scrollTo(0, 0);\n};\nCookiesPage.prototype.getCookieType = function ($cookieFormFieldset) {\n    return $cookieFormFieldset.id;\n};\nexport default CookiesPage;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// js components were originally snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/\nimport CookieBanner from './components/cookie-banner.js';\nimport { getConsentCookie, isValidConsentCookie } from './components/cookie-functions.js';\nimport CookiesPage from './components/cookies-page.js';\nimport initAnalytics, { sendPageViewEvent, sendFilterPageCustomEvent } from './components/analytics';\n// Initialise cookie banner\nconst $cookieBanner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\nnew CookieBanner($cookieBanner).init();\n// Initialise analytics if consent is given\nvar userConsent = getConsentCookie();\nif (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics) {\n    initAnalytics(window.GA_MEASUREMENT_ID);\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n}\n//todo: move this into scripts section on cookie page\n// Initialise cookie page\nvar $cookiesPage = document.querySelector('[data-module=\"app-cookies-page\"]');\nnew CookiesPage($cookiesPage).init();\nconst backLinks = document.querySelectorAll(\".app-back-link\");\nbackLinks.forEach((link) => {\n    link.addEventListener(\"click\", () => {\n        window.history.back();\n    });\n});\nconst button = document.getElementById('open-close-filters');\nbutton === null || button === void 0 ? void 0 : button.addEventListener('click', function handleClick(event) {\n    //todo: update to ts 2?\n    const filterButton = document.getElementById(\"filters\");\n    if (filterButton.style.display === \"none\") {\n        filterButton.style.display = \"block\";\n    }\n    else {\n        filterButton.style.display = \"none\";\n    }\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvSUFBb0k7QUFXcEksT0FBTyxZQUFZLE1BQU0sK0JBQStCLENBQUE7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFDekYsT0FBTyxXQUFXLE1BQU0sOEJBQThCLENBQUE7QUFDdEQsT0FBTyxhQUFhLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXJHLDJCQUEyQjtBQUMzQixNQUFNLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLHFDQUFxQyxDQUF1QixDQUFDO0FBQzFHLElBQUksWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0FBRXRDLDJDQUEyQztBQUMzQyxJQUFJLFdBQVcsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDO0FBQ3JDLElBQUksV0FBVyxJQUFJLG9CQUFvQixDQUFDLFdBQVcsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxTQUFTLEVBQUU7SUFDM0UsYUFBYSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3hDLGlCQUFpQixFQUFFLENBQUM7SUFDcEIseUJBQXlCLEVBQUUsQ0FBQztDQUMvQjtBQUVELHFEQUFxRDtBQUNyRCx5QkFBeUI7QUFDekIsSUFBSSxZQUFZLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFBO0FBQzdFLElBQUksV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0FBRXBDLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQzlELFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUF1QixFQUFFLEVBQUU7SUFDMUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUU7UUFDaEMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMxQixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0FBQzdELE1BQU0sYUFBTixNQUFNLHVCQUFOLE1BQU0sQ0FBRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsU0FBUyxXQUFXLENBQUMsS0FBSztJQUN4RCx1QkFBdUI7SUFDdkIsTUFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQTBCLENBQUM7SUFDakYsSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUU7UUFDdkMsWUFBWSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0tBQ3hDO1NBQU07UUFDSCxZQUFZLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7S0FDdkM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqcyBjb21wb25lbnRzIHdlcmUgb3JpZ2luYWxseSBzbmFmZmxlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hbHBoYWdvdi9nb3Z1ay1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9zcmMvamF2YXNjcmlwdHMvY29tcG9uZW50cy9cclxuXHJcbmRlY2xhcmUgZ2xvYmFsIHtcclxuICAgIGludGVyZmFjZSBXaW5kb3cge1xyXG4gICAgICAgIEdEU19DT05TRU5UX0NPT0tJRV9WRVJTSU9OOiBudW1iZXI7XHJcbiAgICAgICAgR0FfTUVBU1VSRU1FTlRfSUQ6IHN0cmluZztcclxuICAgICAgICBHQV9DT05UQUlORVJfSUQ6IHN0cmluZztcclxuICAgICAgICBkYXRhTGF5ZXI6IGFueVtdO1xyXG4gICAgfVxyXG59XHJcblxyXG5pbXBvcnQgQ29va2llQmFubmVyIGZyb20gJy4vY29tcG9uZW50cy9jb29raWUtYmFubmVyLmpzJ1xyXG5pbXBvcnQgeyBnZXRDb25zZW50Q29va2llLCBpc1ZhbGlkQ29uc2VudENvb2tpZSB9IGZyb20gJy4vY29tcG9uZW50cy9jb29raWUtZnVuY3Rpb25zLmpzJ1xyXG5pbXBvcnQgQ29va2llc1BhZ2UgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZXMtcGFnZS5qcydcclxuaW1wb3J0IGluaXRBbmFseXRpY3MsIHsgc2VuZFBhZ2VWaWV3RXZlbnQsIHNlbmRGaWx0ZXJQYWdlQ3VzdG9tRXZlbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYW5hbHl0aWNzJztcclxuXHJcbi8vIEluaXRpYWxpc2UgY29va2llIGJhbm5lclxyXG5jb25zdCAkY29va2llQmFubmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiZ292dWstY29va2llLWJhbm5lclwiXScpIGFzIEhUTUxFbGVtZW50IHwgbnVsbDtcclxubmV3IENvb2tpZUJhbm5lcigkY29va2llQmFubmVyKS5pbml0KClcclxuXHJcbi8vIEluaXRpYWxpc2UgYW5hbHl0aWNzIGlmIGNvbnNlbnQgaXMgZ2l2ZW5cclxudmFyIHVzZXJDb25zZW50ID0gZ2V0Q29uc2VudENvb2tpZSgpO1xyXG5pZiAodXNlckNvbnNlbnQgJiYgaXNWYWxpZENvbnNlbnRDb29raWUodXNlckNvbnNlbnQpICYmIHVzZXJDb25zZW50LmFuYWx5dGljcykge1xyXG4gICAgaW5pdEFuYWx5dGljcyh3aW5kb3cuR0FfTUVBU1VSRU1FTlRfSUQpO1xyXG4gICAgc2VuZFBhZ2VWaWV3RXZlbnQoKTtcclxuICAgIHNlbmRGaWx0ZXJQYWdlQ3VzdG9tRXZlbnQoKTtcclxufVxyXG5cclxuLy90b2RvOiBtb3ZlIHRoaXMgaW50byBzY3JpcHRzIHNlY3Rpb24gb24gY29va2llIHBhZ2VcclxuLy8gSW5pdGlhbGlzZSBjb29raWUgcGFnZVxyXG52YXIgJGNvb2tpZXNQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiYXBwLWNvb2tpZXMtcGFnZVwiXScpXHJcbm5ldyBDb29raWVzUGFnZSgkY29va2llc1BhZ2UpLmluaXQoKVxyXG5cclxuY29uc3QgYmFja0xpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hcHAtYmFjay1saW5rXCIpO1xyXG5iYWNrTGlua3MuZm9yRWFjaCgobGluazogSFRNTEFuY2hvckVsZW1lbnQpID0+IHtcclxuICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5jb25zdCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3Blbi1jbG9zZS1maWx0ZXJzJyk7XHJcbmJ1dHRvbj8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCkge1xyXG4gICAgLy90b2RvOiB1cGRhdGUgdG8gdHMgMj9cclxuICAgIGNvbnN0IGZpbHRlckJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyc1wiKSBhcyBIVE1MRGl2RWxlbWVudCB8IG51bGw7XHJcbiAgICBpZiAoZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiKSB7XHJcbiAgICAgICAgZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZpbHRlckJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=\n"]}