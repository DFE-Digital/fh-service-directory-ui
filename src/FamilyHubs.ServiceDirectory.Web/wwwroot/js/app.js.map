{"version":3,"sources":["tmp/js/components/cookie-functions.js","tmp/js/components/helpers.js","tmp/js/components/analytics.js","tmp/js/components/cookie-banner.js","tmp/js/components/cookies-page.js","tmp/js/app.js"],"names":["CONSENT_COOKIE_NAME","COOKIE_CATEGORIES","analytics","window","GA_CONTAINER_ID","essential","DEFAULT_COOKIE_CONSENT","version","GDS_CONSENT_COOKIE_VERSION","getConsentCookie","consentCookie","getCookie","consentCookieObj","JSON","parse","err","isValidConsentCookie","options","setConsentCookie","cookieConsent","option","stringify","setCookie","days","resetCookies","cookieType","forEach","cookie","deleteCookie","userAllowsCookieCategory","cookieCategory","cookiePreferences","e","console","error","userAllowsCookie","cookieName","category","indexOf","name","nameEQ","cookies","document","split","i","len","length","charAt","substring","decodeURIComponent","value","cookieString","date","Date","setTime","getTime","toUTCString","location","protocol","hostname","nodeListForEach","nodes","callback","NodeList","prototype","call","gtag","command","args","dataLayer","push","arguments","GaMeasurementId","initAnalytics","gaMeasurementId","Boolean","setDefaultConsent","loadGaScript","pageViewParams","getPiiSafePageView","send_page_view","page_path","page_location","page_referrer","referrer","cookie_flags","userConsent","updateAnalyticsStorageConsent","sendPageViewEvent","sendFilterPageCustomEvent","analytics_storage","granted","element","getElementById","totalResults","getAttribute","undefined","total_results","sendAnalyticsCustomEvent","accepted","source","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","pageView","page_title","title","send_to","piiSafeReferrerQueryString","getPiiSafeQueryString","URL","search","urlArray","piiSafeQueryString","href","pathname","queryString","queryParams","URLSearchParams","postcode","get","replace","set","delete","toString","cookieBannerAcceptSelector","cookieBannerRejectSelector","cookieBannerHideButtonSelector","cookieMessageSelector","cookieConfirmationAcceptSelector","cookieConfirmationRejectSelector","CookieBanner","$module","this","CookiesPage","init","$cookieBanner","$acceptButton","querySelector","$rejectButton","$cookieMessage","$cookieConfirmationAccept","$cookieConfirmationReject","$cookieBannerHideButtons","querySelectorAll","onCookiesPage","currentConsentCookie","CookieFunctions.getConsentCookie","CookieFunctions.isValidConsentCookie","CookieFunctions.resetCookies","removeAttribute","addEventListener","acceptCookies","bind","rejectCookies","$cookieBannerHideButton","hideBanner","setAttribute","CookieFunctions.setConsentCookie","revealConfirmationMessage","confirmationMessage","focus","$cookiePage","$cookieForm","$cookieFormFieldsets","$successNotification","$successLink","$cookieFormFieldset","showUserPreference","savePreferences","event","preventDefault","preferences","getCookieType","selectedItem","analyticsAccepted","showSuccessNotification","preference","radioValue","checked","scrollTo","id","GA_MEASUREMENT_ID","$cookiesPage","backLinks","link","history","back","button","filterButton","style","display"],"mappings":"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","file":"app.js","sourcesContent":["/* Name of the cookie to save users cookie preferences to. */\nconst CONSENT_COOKIE_NAME = 'service_directory_cookies_policy';\n/* Users can (dis)allow different groups of cookies. */\nconst COOKIE_CATEGORIES = {\n    analytics: ['_ga', '_ga_' + window.GA_CONTAINER_ID],\n    /* Essential cookies\n     *\n     * Essential cookies cannot be deselected, but we want our cookie code to\n     * only allow adding cookies that are documented in this object, so they need\n     * to be added here.\n     */\n    essential: ['service_directory_cookies_policy']\n};\n/*\n * Default cookie preferences if user has no cookie preferences.\n *\n * Note that this doesn't include a key for essential cookies, essential\n * cookies cannot be disallowed. If the object contains { essential: false }\n * this will be ignored.\n */\nconst DEFAULT_COOKIE_CONSENT = {\n    analytics: false,\n    version: window.GDS_CONSENT_COOKIE_VERSION\n};\n/** Return the user's cookie preferences.\n *\n * If the consent cookie is malformed, or not present,\n * returns null.\n */\nexport function getConsentCookie() {\n    const consentCookie = getCookie(CONSENT_COOKIE_NAME);\n    let consentCookieObj;\n    if (consentCookie) {\n        try {\n            consentCookieObj = JSON.parse(consentCookie);\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n    return consentCookieObj;\n}\n/** Check the cookie preferences object.\n *\n * If the consent object is not present, malformed, or incorrect version,\n * returns false, otherwise returns true.\n */\nexport function isValidConsentCookie(options) {\n    return (options && options.version >= window.GDS_CONSENT_COOKIE_VERSION);\n}\n/** Update the user's cookie preferences. */\nexport function setConsentCookie(options) {\n    let cookieConsent = getConsentCookie();\n    if (!cookieConsent) {\n        cookieConsent = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    // Merge current cookie preferences and new preferences\n    for (var option in options) {\n        cookieConsent[option] = options[option];\n    }\n    // Essential cookies cannot be deselected, ignore this cookie type\n    delete cookieConsent.essential;\n    cookieConsent.version = window.GDS_CONSENT_COOKIE_VERSION;\n    // Set the consent cookie\n    setCookie(CONSENT_COOKIE_NAME, JSON.stringify(cookieConsent), { days: 365 });\n    // Update the other cookies\n    resetCookies();\n}\n/** Apply the user's cookie preferences\n *\n * Deletes any cookies the user has not consented to.\n */\nexport function resetCookies() {\n    var options = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(options)) {\n        options = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    for (var cookieType in options) {\n        if (cookieType === 'version') {\n            continue;\n        }\n        // Essential cookies cannot be deselected, ignore this cookie type\n        if (cookieType === 'essential') {\n            continue;\n        }\n        if (!options[cookieType]) {\n            // Fetch the cookies in that category\n            var cookiesInCategory = COOKIE_CATEGORIES[cookieType];\n            cookiesInCategory.forEach(function (cookie) {\n                deleteCookie(cookie);\n            });\n        }\n    }\n}\nfunction userAllowsCookieCategory(cookieCategory, cookiePreferences) {\n    // Essential cookies are always allowed\n    if (cookieCategory === 'essential') {\n        return true;\n    }\n    // Sometimes cookiePreferences is malformed in some of the tests, so we need to handle these\n    try {\n        return cookiePreferences[cookieCategory];\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n}\nfunction userAllowsCookie(cookieName) {\n    // Always allow setting the consent cookie\n    if (cookieName === CONSENT_COOKIE_NAME) {\n        return true;\n    }\n    // Get the current cookie preferences\n    var cookiePreferences = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(cookiePreferences)) {\n        cookiePreferences = DEFAULT_COOKIE_CONSENT;\n    }\n    for (var category in COOKIE_CATEGORIES) {\n        var cookiesInCategory = COOKIE_CATEGORIES[category];\n        if (cookiesInCategory.indexOf(cookieName) !== '-1') {\n            return userAllowsCookieCategory(category, cookiePreferences);\n        }\n    }\n    // Deny the cookie if it is not known to us\n    return false;\n}\nfunction getCookie(name) {\n    var nameEQ = name + '=';\n    var cookies = document.cookie.split(';');\n    for (var i = 0, len = cookies.length; i < len; i++) {\n        var cookie = cookies[i];\n        while (cookie.charAt(0) === ' ') {\n            cookie = cookie.substring(1, cookie.length);\n        }\n        if (cookie.indexOf(nameEQ) === 0) {\n            return decodeURIComponent(cookie.substring(nameEQ.length));\n        }\n    }\n    return null;\n}\n// do we need to set the domain?\nfunction setCookie(name, value, options) {\n    if (userAllowsCookie(name)) {\n        //todo: test\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        var cookieString = name + '=' + value + '; path=/; SameSite=Strict';\n        if (options.days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (options.days * 24 * 60 * 60 * 1000));\n            cookieString = cookieString + '; expires=' + date.toUTCString();\n        }\n        if (document.location.protocol === 'https:') {\n            cookieString = cookieString + '; Secure';\n        }\n        document.cookie = cookieString;\n    }\n}\nfunction deleteCookie(name) {\n    if (getCookie(name)) {\n        // Cookies need to be deleted in the same level of specificity in which they were set\n        // If a cookie was set with a specified domain, it needs to be specified when deleted\n        // If a cookie wasn't set with the domain attribute, it shouldn't be there when deleted\n        // You can't tell if a cookie was set with a domain attribute or not, so try both options\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + window.location.hostname + ';path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=.' + window.location.hostname + ';path=/';\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","export function nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n        return nodes.forEach(callback);\n    }\n    for (var i = 0; i < nodes.length; i++) {\n        callback.call(window, nodes[i], i, nodes);\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxNQUFNLFVBQVUsZUFBZSxDQUMzQixLQUEwQixFQUMxQixRQUE0RTtJQUU1RSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDbEM7SUFDRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNuQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQzdDO0FBQ0wsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2hlbHBlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGZ1bmN0aW9uIG5vZGVMaXN0Rm9yRWFjaChcclxuICAgIG5vZGVzOiBOb2RlTGlzdE9mPEVsZW1lbnQ+LFxyXG4gICAgY2FsbGJhY2s6IChub2RlOiBFbGVtZW50LCBpbmRleDogbnVtYmVyLCBub2RlczogTm9kZUxpc3RPZjxFbGVtZW50PikgPT4gdm9pZFxyXG4pOiB2b2lkIHtcclxuICAgIGlmICh3aW5kb3cuTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcclxuICAgICAgICByZXR1cm4gbm9kZXMuZm9yRWFjaChjYWxsYmFjayk7XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgY2FsbGJhY2suY2FsbCh3aW5kb3csIG5vZGVzW2ldLCBpLCBub2Rlcyk7XHJcbiAgICB9XHJcbn1cclxuIl19\n","import { getConsentCookie, isValidConsentCookie } from './cookie-functions.js';\nfunction gtag(command, ...args) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push(arguments);\n}\nlet GaMeasurementId = '';\n//todo: use prototype? (or class?)\n// (having an object (prototype/class) will ensure that GaMeasurementId will have already been set)\nexport default function initAnalytics(gaMeasurementId) {\n    // if the environment doesn't have a measurement id, don't load analytics\n    if (!Boolean(gaMeasurementId)) {\n        return;\n    }\n    GaMeasurementId = gaMeasurementId;\n    setDefaultConsent();\n    loadGaScript(gaMeasurementId);\n    gtag('js', new Date());\n    const pageViewParams = getPiiSafePageView(gaMeasurementId);\n    // set the config for auto generated events other than page_view\n    gtag('config', gaMeasurementId, {\n        send_page_view: false,\n        page_path: pageViewParams.page_path,\n        page_location: pageViewParams.page_location,\n        page_referrer: pageViewParams.referrer,\n        cookie_flags: 'secure'\n    });\n    var userConsent = getConsentCookie();\n    if (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics) {\n        updateAnalyticsStorageConsent(true);\n    }\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n}\nfunction setDefaultConsent() {\n    gtag('consent', 'default', {\n        'analytics_storage': 'denied'\n    });\n    gtag('set', 'url_passthrough', true);\n}\nexport function updateAnalyticsStorageConsent(granted) {\n    gtag('consent', 'update', {\n        'analytics_storage': granted ? 'granted' : 'denied'\n    });\n}\nexport function sendPageViewEvent() {\n    // send the page_view event manually (https://developers.google.com/analytics/devguides/collection/gtagjs/pages#default_behavior)\n    gtag('event', 'page_view', getPiiSafePageView(GaMeasurementId));\n}\nexport function sendFilterPageCustomEvent() {\n    //todo: make filter page only\n    const element = document.getElementById('results');\n    const totalResults = element === null || element === void 0 ? void 0 : element.getAttribute('data-total-results');\n    if (totalResults === undefined)\n        return;\n    gtag('event', 'filter_page', {\n        'total_results': totalResults\n    });\n}\nexport function sendAnalyticsCustomEvent(accepted, source) {\n    gtag('event', 'analytics', {\n        'accepted': accepted,\n        'source': source\n    });\n}\nfunction loadGaScript(gaMeasurementId) {\n    const f = document.getElementsByTagName('script')[0];\n    const j = document.createElement('script');\n    j.async = true;\n    j.src = 'https://www.googletagmanager.com/gtag/js?id=' + gaMeasurementId;\n    f.parentNode.insertBefore(j, f);\n}\nfunction getPiiSafePageView(gaMeasurementId) {\n    const pageView = {\n        page_title: document.title,\n        send_to: gaMeasurementId,\n        referrer: '',\n        page_location: '',\n        page_path: ''\n    };\n    //todo: set as referrer or page_referrer in pageView - does it matter? is it only picking it up from the config?\n    //todo: get piisafe referrer function\n    if (document.referrer !== '') {\n        const referrerUrl = new URL(document.referrer);\n        const piiSafeReferrerQueryString = getPiiSafeQueryString(referrerUrl.search);\n        if (piiSafeReferrerQueryString == null) {\n            pageView.referrer = document.referrer;\n        }\n        else {\n            const urlArray = document.referrer.split(\"?\");\n            pageView.referrer = urlArray[0] + piiSafeReferrerQueryString;\n        }\n    }\n    const piiSafeQueryString = getPiiSafeQueryString(window.location.search);\n    if (piiSafeQueryString == null) {\n        pageView.page_location = window.location.href;\n        pageView.page_path = window.location.pathname + window.location.search;\n        return pageView;\n    }\n    const urlArray = window.location.href.split(\"?\");\n    pageView.page_location = urlArray[0] + piiSafeQueryString;\n    pageView.page_path = window.location.pathname + piiSafeQueryString;\n    return pageView;\n}\nfunction getPiiSafeQueryString(queryString) {\n    //todo: for safety, convert to lowercase, so that if the user changes the case of the url, we still don't collect pii\n    const queryParams = new URLSearchParams(queryString);\n    let postcode = queryParams.get(\"postcode\");\n    if (postcode == null) {\n        // null indicates original query params were already pii safe\n        return null;\n    }\n    postcode = postcode.replace(/[a-zA-Z]+$/, \"\");\n    queryParams.set(\"postcode\", postcode);\n    queryParams.delete(\"latitude\");\n    queryParams.delete(\"longitude\");\n    return '?' + queryParams.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import * as CookieFunctions from './cookie-functions.js';\n/*todo: we don't meed a pollyfill for bind, as long as we server up the non js version of the site for ie8 (https://caniuse.com/?search=bind) */\n/*import 'govuk-frontend/govuk/vendor/polyfills/Function/prototype/bind'*/\n/*todo: i think we're ok for this too (see above about ie8), but we _might_ need it for >8 ie (use? https://www.npmjs.com/package/events-polyfill)*/\n/*import 'govuk-frontend/govuk/vendor/polyfills/Event'*/\nimport { nodeListForEach } from './helpers.js';\nimport { sendPageViewEvent, sendFilterPageCustomEvent, sendAnalyticsCustomEvent, updateAnalyticsStorageConsent } from './analytics.js';\nconst cookieBannerAcceptSelector = '.js-cookie-banner-accept';\nconst cookieBannerRejectSelector = '.js-cookie-banner-reject';\nconst cookieBannerHideButtonSelector = '.js-cookie-banner-hide';\nconst cookieMessageSelector = '.js-cookie-banner-message';\nconst cookieConfirmationAcceptSelector = '.js-cookie-banner-confirmation-accept';\nconst cookieConfirmationRejectSelector = '.js-cookie-banner-confirmation-reject';\nexport default function CookieBanner($module) {\n    this.$module = $module;\n}\nCookieBanner.prototype.init = function () {\n    this.$cookieBanner = this.$module;\n    this.$acceptButton = this.$module.querySelector(cookieBannerAcceptSelector);\n    this.$rejectButton = this.$module.querySelector(cookieBannerRejectSelector);\n    this.$cookieMessage = this.$module.querySelector(cookieMessageSelector);\n    this.$cookieConfirmationAccept = this.$module.querySelector(cookieConfirmationAcceptSelector);\n    this.$cookieConfirmationReject = this.$module.querySelector(cookieConfirmationRejectSelector);\n    this.$cookieBannerHideButtons = this.$module.querySelectorAll(cookieBannerHideButtonSelector);\n    // Exit if no cookie banner module\n    // or if we're on the cookies page to avoid circular journeys\n    if (!this.$cookieBanner || this.onCookiesPage()) {\n        return;\n    }\n    // Show the cookie banner to users who have not consented or have an\n    // outdated consent cookie\n    var currentConsentCookie = CookieFunctions.getConsentCookie();\n    if (!currentConsentCookie || !CookieFunctions.isValidConsentCookie(currentConsentCookie)) {\n        // If the consent cookie version is not valid, we need to remove any cookies which have been\n        // set previously\n        CookieFunctions.resetCookies();\n        this.$cookieBanner.removeAttribute('hidden');\n    }\n    this.$acceptButton.addEventListener('click', this.acceptCookies.bind(this));\n    this.$rejectButton.addEventListener('click', this.rejectCookies.bind(this));\n    nodeListForEach(this.$cookieBannerHideButtons, function ($cookieBannerHideButton) {\n        $cookieBannerHideButton.addEventListener('click', this.hideBanner.bind(this));\n    }.bind(this));\n};\nCookieBanner.prototype.hideBanner = function () {\n    this.$cookieBanner.setAttribute('hidden', true);\n};\nCookieBanner.prototype.acceptCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: true });\n    updateAnalyticsStorageConsent(true);\n    sendAnalyticsCustomEvent(true, 'banner');\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationAccept);\n};\nCookieBanner.prototype.rejectCookies = function () {\n    updateAnalyticsStorageConsent(true);\n    sendAnalyticsCustomEvent(false, 'banner');\n    updateAnalyticsStorageConsent(false);\n    CookieFunctions.setConsentCookie({ analytics: false });\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationReject);\n};\nCookieBanner.prototype.revealConfirmationMessage = function (confirmationMessage) {\n    confirmationMessage.removeAttribute('hidden');\n    // Set tabindex to -1 to make the confirmation banner focusable with JavaScript\n    if (!confirmationMessage.getAttribute('tabindex')) {\n        confirmationMessage.setAttribute('tabindex', '-1');\n        confirmationMessage.addEventListener('blur', function () {\n            confirmationMessage.removeAttribute('tabindex');\n        });\n    }\n    confirmationMessage.focus();\n};\nCookieBanner.prototype.onCookiesPage = function () {\n    return window.location.pathname === '/cookies/';\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import { getConsentCookie, setConsentCookie } from './cookie-functions.js';\nimport { nodeListForEach } from './helpers.js';\nimport { sendPageViewEvent, sendAnalyticsCustomEvent, updateAnalyticsStorageConsent } from './analytics.js';\nfunction CookiesPage($module) {\n    this.$module = $module;\n}\nCookiesPage.prototype.init = function () {\n    this.$cookiePage = this.$module;\n    if (!this.$cookiePage) {\n        return;\n    }\n    this.$cookieForm = this.$cookiePage.querySelector('.js-cookies-page-form');\n    this.$cookieFormFieldsets = this.$cookieForm.querySelectorAll('.js-cookies-page-form-fieldset');\n    this.$successNotification = this.$cookiePage.querySelector('.js-cookies-page-success');\n    this.$successLink = this.$cookiePage.querySelector('.js-cookies-page-success-link');\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        this.showUserPreference($cookieFormFieldset, getConsentCookie());\n        /*        $cookieFormFieldset.removeAttribute('hidden')*/\n    }.bind(this));\n    // Show submit button\n    //this.$cookieForm.querySelector('.js-cookies-form-button').removeAttribute('hidden')\n    this.$cookieForm.addEventListener('submit', this.savePreferences.bind(this));\n};\nCookiesPage.prototype.savePreferences = function (event) {\n    // Stop default form submission behaviour\n    event.preventDefault();\n    var preferences = {};\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        var cookieType = this.getCookieType($cookieFormFieldset);\n        var selectedItem = $cookieFormFieldset.querySelector('input[name=' + cookieType + ']:checked').value;\n        preferences[cookieType] = selectedItem === 'true';\n    }.bind(this));\n    updateAnalyticsStorageConsent(true);\n    const analyticsAccepted = preferences['analytics'];\n    sendAnalyticsCustomEvent(analyticsAccepted, 'cookies');\n    if (analyticsAccepted) {\n        sendPageViewEvent();\n    }\n    else {\n        updateAnalyticsStorageConsent(false);\n    }\n    setConsentCookie(preferences);\n    // handle the corner case, where the user has selected their preference on the cookie page, whilst the banner is still open as they haven't previously selected their preference\n    //todo: call hideBanner\n    var banner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    banner.setAttribute('hidden', 'true');\n    this.showSuccessNotification();\n};\nCookiesPage.prototype.showUserPreference = function ($cookieFormFieldset, preferences) {\n    var cookieType = this.getCookieType($cookieFormFieldset);\n    var preference = false;\n    if (cookieType && preferences && preferences[cookieType] !== undefined) {\n        preference = preferences[cookieType];\n    }\n    var radioValue = preference ? 'true' : 'false';\n    var radio = $cookieFormFieldset.querySelector('input[name=' + cookieType + '][value=' + radioValue + ']');\n    radio.checked = true;\n};\nCookiesPage.prototype.showSuccessNotification = function () {\n    this.$successNotification.removeAttribute('hidden');\n    // if the user's come to the cookies page through the link in the cookie banner, show a link to take them back to the page they came from\n    var referrer = document.referrer ? new URL(document.referrer).pathname : false;\n    if (referrer && referrer !== document.location.pathname) {\n        this.$successLink.href = referrer;\n        this.$successLink.removeAttribute('hidden');\n    }\n    else {\n        this.$successLink.setAttribute('hidden', 'true');\n    }\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // GOV.UK Frontend will remove the tabindex on blur as the component doesn't\n    // need to be focusable after the user has read the text.\n    if (!this.$successNotification.getAttribute('tabindex')) {\n        this.$successNotification.setAttribute('tabindex', '-1');\n    }\n    this.$successNotification.focus();\n    // scroll to the top of the page\n    window.scrollTo(0, 0);\n};\nCookiesPage.prototype.getCookieType = function ($cookieFormFieldset) {\n    return $cookieFormFieldset.id;\n};\nexport default CookiesPage;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY29va2llcy1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBaUIsTUFBTSx1QkFBdUIsQ0FBQTtBQUN6RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sY0FBYyxDQUFBO0FBQzlDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSx3QkFBd0IsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGdCQUFnQixDQUFBO0FBRTNHLFNBQVMsV0FBVyxDQUFDLE9BQU87SUFDeEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7QUFDMUIsQ0FBQztBQUVELFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHO0lBQ3pCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQTtJQUUvQixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUNuQixPQUFNO0tBQ1Q7SUFFRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDMUUsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsZ0NBQWdDLENBQUMsQ0FBQTtJQUMvRixJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsMEJBQTBCLENBQUMsQ0FBQTtJQUN0RixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLCtCQUErQixDQUFDLENBQUE7SUFFbkYsZUFBZSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxVQUFVLG1CQUFtQjtRQUNwRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsbUJBQW1CLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFBO1FBQ3hFLHlEQUF5RDtJQUNyRCxDQUFDLENBQUMsSUFBSSxDQUFDLElB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LElBQUksR0FBRyxRQUFRLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUE7S0FDOUM7U0FBTTtRQUNILElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUNwRDtJQUVELG9FQUFvRTtJQUNwRSw0RUFBNEU7SUFDNUUseURBQXlEO0lBQ3pELElBQUksQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1FBQ3JELElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFBO0tBQzNEO0lBRUQsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssRUFBRSxDQUFBO0lBRWpDLGdDQUFnQztJQUNoQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtBQUN6QixDQUFDLENBQUE7QUFFRCxXQUFXLENBQUMsU0FBUyxDQUFDLGFBQWEsR0FBRyxVQUFVLG1CQUFtQjtJQUMvRCxPQUFPLG1CQUFtQixDQUFDLEVBQUUsQ0FBQTtBQUNqQyxDQUFDLENBQUE7QUFFRCxlQUFlLFdBQVcsQ0FBQSIsImZpbGUiOiJjb21wb25lbnRzL2Nvb2tpZXMtcGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENvbnNlbnRDb29raWUsIHNldENvbnNlbnRDb29raWUsIENvbnNlbnRDb29raWUgfSBmcm9tICcuL2Nvb2tpZS1mdW5jdGlvbnMuanMnXHJcbmltcG9ydCB7IG5vZGVMaXN0Rm9yRWFjaCB9IGZyb20gJy4vaGVscGVycy5qcydcclxuaW1wb3J0IHsgc2VuZFBhZ2VWaWV3RXZlbnQsIHNlbmRBbmFseXRpY3NDdXN0b21FdmVudCwgdXBkYXRlQW5hbHl0aWNzU3RvcmFnZUNvbnNlbnQgfSBmcm9tICcuL2FuYWx5dGljcy5qcydcclxuXHJcbmZ1bmN0aW9uIENvb2tpZXNQYWdlKCRtb2R1bGUpIHtcclxuICAgIHRoaXMuJG1vZHVsZSA9ICRtb2R1bGVcclxufVxyXG5cclxuQ29va2llc1BhZ2UucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLiRjb29raWVQYWdlID0gdGhpcy4kbW9kdWxlXHJcblxyXG4gICAgaWYgKCF0aGlzLiRjb29raWVQYWdlKSB7XHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy4kY29va2llRm9ybSA9IHRoaXMuJGNvb2tpZVBhZ2UucXVlcnlTZWxlY3RvcignLmpzLWNvb2tpZXMtcGFnZS1mb3JtJylcclxuICAgIHRoaXMuJGNvb2tpZUZvcm1GaWVsZHNldHMgPSB0aGlzLiRjb29raWVGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5qcy1jb29raWVzLXBhZ2UtZm9ybS1maWVsZHNldCcpXHJcbiAgICB0aGlzLiRzdWNjZXNzTm90aWZpY2F0aW9uID0gdGhpcy4kY29va2llUGFnZS5xdWVyeVNlbGVjdG9yKCcuanMtY29va2llcy1wYWdlLXN1Y2Nlc3MnKVxyXG4gICAgdGhpcy4kc3VjY2Vzc0xpbmsgPSB0aGlzLiRjb29raWVQYWdlLnF1ZXJ5U2VsZWN0b3IoJy5qcy1jb29raWVzLXBhZ2Utc3VjY2Vzcy1saW5rJylcclxuXHJcbiAgICBub2RlTGlzdEZvckVhY2godGhpcy4kY29va2llRm9ybUZpZWxkc2V0cywgZnVuY3Rpb24gKCRjb29raWVGb3JtRmllbGRzZXQpIHtcclxuICAgICAgICB0aGlzLnNob3dVc2VyUHJlZmVyZW5jZSgkY29va2llRm9ybUZpZWxkc2V0LCBnZXRDb25zZW50Q29va2llKCkpXHJcbi8qICAgICAgICAkY29va2llRm9ybUZpZWxkc2V0LnJlbW92ZUF0dHJpYnV0ZSgnaGlkZGVuJykqL1xyXG4gICAgfS5iaW5kKHRoaXMpKVxyXG5cclxuICAgIC8vIFNob3cgc3VibWl0IGJ1dHRvblxyXG4gICAgLy90aGlzLiRjb29raWVGb3JtLnF1ZXJ5U2VsZWN0b3IoJy5qcy1jb29raWVzLWZvcm0tYnV0dG9uJykucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKVxyXG5cclxuICAgIHRoaXMuJGNvb2tpZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5zYXZlUHJlZmVyZW5jZXMuYmluZCh0aGlzKSlcclxufVxyXG5cclxuQ29va2llc1BhZ2UucHJvdG90eXBlLnNhdmVQcmVmZXJlbmNlcyA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgLy8gU3RvcCBkZWZhdWx0IGZvcm0gc3VibWlzc2lvbiBiZWhhdmlvdXJcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgdmFyIHByZWZlcmVuY2VzOiBDb25zZW50Q29va2llID0ge31cclxuXHJcbiAgICBub2RlTGlzdEZvckVhY2godGhpcy4kY29va2llRm9ybUZpZWxkc2V0cyxcclxuICAgICAgICBmdW5jdGlvbigkY29va2llRm9ybUZpZWxkc2V0KSB7XHJcbiAgICAgICAgICAgIHZhciBjb29raWVUeXBlID0gdGhpcy5nZXRDb29raWVUeXBlKCRjb29raWVGb3JtRmllbGRzZXQpXHJcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZEl0ZW0gPSAkY29va2llRm9ybUZpZWxkc2V0LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9JyArIGNvb2tpZVR5cGUgKyAnXTpjaGVja2VkJykudmFsdWVcclxuXHJcbiAgICAgICAgICAgIHByZWZlcmVuY2VzW2Nvb2tpZVR5cGVdID0gc2VsZWN0ZWRJdGVtID09PSAndHJ1ZSdcclxuICAgICAgICB9LmJpbmQodGhpcykpO1xyXG5cclxuICAgIHVwZGF0ZUFuYWx5dGljc1N0b3JhZ2VDb25zZW50KHRydWUpO1xyXG4gICAgY29uc3QgYW5hbHl0aWNzQWNjZXB0ZWQgPSBwcmVmZXJlbmNlc1snYW5hbHl0aWNzJ107XHJcbiAgICBzZW5kQW5hbHl0aWNzQ3VzdG9tRXZlbnQoYW5hbHl0aWNzQWNjZXB0ZWQsICdjb29raWVzJyk7XHJcblxyXG4gICAgaWYgKGFuYWx5dGljc0FjY2VwdGVkKSB7XHJcbiAgICAgICAgc2VuZFBhZ2VWaWV3RXZlbnQoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdXBkYXRlQW5hbHl0aWNzU3RvcmFnZUNvbnNlbnQoZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldENvbnNlbnRDb29raWUocHJlZmVyZW5jZXMpO1xyXG5cclxuICAgIC8vIGhhbmRsZSB0aGUgY29ybmVyIGNhc2UsIHdoZXJlIHRoZSB1c2VyIGhhcyBzZWxlY3RlZCB0aGVpciBwcmVmZXJlbmNlIG9uIHRoZSBjb29raWUgcGFnZSwgd2hpbHN0IHRoZSBiYW5uZXIgaXMgc3RpbGwgb3BlbiBhcyB0aGV5IGhhdmVuJ3QgcHJldmlvdXNseSBzZWxlY3RlZCB0aGVpciBwcmVmZXJlbmNlXHJcbiAgICAvL3RvZG86IGNhbGwgaGlkZUJhbm5lclxyXG4gICAgdmFyIGJhbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1vZHVsZT1cImdvdnVrLWNvb2tpZS1iYW5uZXJcIl0nKTtcclxuICAgIGJhbm5lci5zZXRBdHRyaWJ1dGUoJ2hpZGRlbicsICd0cnVlJyk7XHJcbiAgICBcclxuICAgIHRoaXMuc2hvd1N1Y2Nlc3NOb3RpZmljYXRpb24oKVxyXG59XHJcblxyXG5Db29raWVzUGFnZS5wcm90b3R5cGUuc2hvd1VzZXJQcmVmZXJlbmNlID0gZnVuY3Rpb24gKCRjb29raWVGb3JtRmllbGRzZXQsIHByZWZlcmVuY2VzKSB7XHJcbiAgICB2YXIgY29va2llVHlwZSA9IHRoaXMuZ2V0Q29va2llVHlwZSgkY29va2llRm9ybUZpZWxkc2V0KVxyXG4gICAgdmFyIHByZWZlcmVuY2UgPSBmYWxzZVxyXG5cclxuICAgIGlmIChjb29raWVUeXBlICYmIHByZWZlcmVuY2VzICYmIHByZWZlcmVuY2VzW2Nvb2tpZVR5cGVdICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBwcmVmZXJlbmNlID0gcHJlZmVyZW5jZXNbY29va2llVHlwZV1cclxuICAgIH1cclxuXHJcbiAgICB2YXIgcmFkaW9WYWx1ZSA9IHByZWZlcmVuY2UgPyAndHJ1ZScgOiAnZmFsc2UnXHJcbiAgICB2YXIgcmFkaW8gPSAkY29va2llRm9ybUZpZWxkc2V0LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9JyArIGNvb2tpZVR5cGUgKyAnXVt2YWx1ZT0nICsgcmFkaW9WYWx1ZSArICddJylcclxuICAgIHJhZGlvLmNoZWNrZWQgPSB0cnVlXHJcbn1cclxuXHJcbkNvb2tpZXNQYWdlLnByb3RvdHlwZS5zaG93U3VjY2Vzc05vdGlmaWNhdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMuJHN1Y2Nlc3NOb3RpZmljYXRpb24ucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKVxyXG5cclxuICAgIC8vIGlmIHRoZSB1c2VyJ3MgY29tZSB0byB0aGUgY29va2llcyBwYWdlIHRocm91Z2ggdGhlIGxpbmsgaW4gdGhlIGNvb2tpZSBiYW5uZXIsIHNob3cgYSBsaW5rIHRvIHRha2UgdGhlbSBiYWNrIHRvIHRoZSBwYWdlIHRoZXkgY2FtZSBmcm9tXHJcbiAgICB2YXIgcmVmZXJyZXIgPSBkb2N1bWVudC5yZWZlcnJlciA/IG5ldyBVUkwoZG9jdW1lbnQucmVmZXJyZXIpLnBhdGhuYW1lIDogZmFsc2U7XHJcbiAgICBpZiAocmVmZXJyZXIgJiYgcmVmZXJyZXIgIT09IGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lKSB7XHJcbiAgICAgICAgdGhpcy4kc3VjY2Vzc0xpbmsuaHJlZiA9IHJlZmVycmVyO1xyXG4gICAgICAgIHRoaXMuJHN1Y2Nlc3NMaW5rLnJlbW92ZUF0dHJpYnV0ZSgnaGlkZGVuJylcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy4kc3VjY2Vzc0xpbmsuc2V0QXR0cmlidXRlKCdoaWRkZW4nLCAndHJ1ZScpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFNldCB0YWJpbmRleCB0byAtMSB0byBtYWtlIHRoZSBlbGVtZW50IGZvY3VzYWJsZSB3aXRoIEphdmFTY3JpcHQuXHJcbiAgICAvLyBHT1YuVUsgRnJvbnRlbmQgd2lsbCByZW1vdmUgdGhlIHRhYmluZGV4IG9uIGJsdXIgYXMgdGhlIGNvbXBvbmVudCBkb2Vzbid0XHJcbiAgICAvLyBuZWVkIHRvIGJlIGZvY3VzYWJsZSBhZnRlciB0aGUgdXNlciBoYXMgcmVhZCB0aGUgdGV4dC5cclxuICAgIGlmICghdGhpcy4kc3VjY2Vzc05vdGlmaWNhdGlvbi5nZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JykpIHtcclxuICAgICAgICB0aGlzLiRzdWNjZXNzTm90aWZpY2F0aW9uLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuJHN1Y2Nlc3NOb3RpZmljYXRpb24uZm9jdXMoKVxyXG5cclxuICAgIC8vIHNjcm9sbCB0byB0aGUgdG9wIG9mIHRoZSBwYWdlXHJcbiAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMClcclxufVxyXG5cclxuQ29va2llc1BhZ2UucHJvdG90eXBlLmdldENvb2tpZVR5cGUgPSBmdW5jdGlvbiAoJGNvb2tpZUZvcm1GaWVsZHNldCkge1xyXG4gICAgcmV0dXJuICRjb29raWVGb3JtRmllbGRzZXQuaWRcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29va2llc1BhZ2UiXX0=\n","// js components were originally snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/\nimport CookieBanner from './components/cookie-banner.js';\nimport CookiesPage from './components/cookies-page.js';\nimport initAnalytics from './components/analytics';\nimport { nodeListForEach } from './components/helpers.js';\n//todo: consistency in module/proto/class style\n// Initialise cookie banner\nconst $cookieBanner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\nnew CookieBanner($cookieBanner).init();\ninitAnalytics(window.GA_MEASUREMENT_ID);\n//todo: move this into scripts section on cookie page\n// Initialise cookie page\nvar $cookiesPage = document.querySelector('[data-module=\"app-cookies-page\"]');\nnew CookiesPage($cookiesPage).init();\n//todo: move into module\nconst backLinks = document.querySelectorAll(\".app-back-link\");\nnodeListForEach(backLinks, (link) => {\n    link.addEventListener(\"click\", () => {\n        window.history.back();\n    });\n});\nconst button = document.getElementById('open-close-filters');\nbutton === null || button === void 0 ? void 0 : button.addEventListener('click', function handleClick(event) {\n    const filterButton = document.getElementById(\"filters\");\n    if (filterButton.style.display === \"none\") {\n        filterButton.style.display = \"block\";\n    }\n    else {\n        filterButton.style.display = \"none\";\n    }\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvSUFBb0k7QUFXcEksT0FBTyxZQUFZLE1BQU0sK0JBQStCLENBQUE7QUFDeEQsT0FBTyxXQUFXLE1BQU0sOEJBQThCLENBQUE7QUFDdEQsT0FBTyxhQUE4RixNQUFNLHdCQUF3QixDQUFDO0FBQ3BJLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUUxRCwrQ0FBK0M7QUFFL0MsMkJBQTJCO0FBQzNCLE1BQU0sYUFBYSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMscUNBQXFDLENBQXVCLENBQUM7QUFDMUcsSUFBSSxZQUFZLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7QUFFdkMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBRXhDLHFEQUFxRDtBQUNyRCx5QkFBeUI7QUFDekIsSUFBSSxZQUFZLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFBO0FBQzdFLElBQUksV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFBO0FBRXBDLHdCQUF3QjtBQUN4QixNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUM5RCxlQUFlLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBdUIsRUFBRSxFQUFFO0lBQ25ELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ2hDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQztBQUVILE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUM3RCxNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUUsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFNBQVMsV0FBVyxDQUFDLEtBQUs7SUFDeEQsTUFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQTBCLENBQUM7SUFDakYsSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUU7UUFDdkMsWUFBWSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0tBQ3hDO1NBQU07UUFDSCxZQUFZLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7S0FDdkM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqcyBjb21wb25lbnRzIHdlcmUgb3JpZ2luYWxseSBzbmFmZmxlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hbHBoYWdvdi9nb3Z1ay1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9zcmMvamF2YXNjcmlwdHMvY29tcG9uZW50cy9cclxuXHJcbmRlY2xhcmUgZ2xvYmFsIHtcclxuICAgIGludGVyZmFjZSBXaW5kb3cge1xyXG4gICAgICAgIEdEU19DT05TRU5UX0NPT0tJRV9WRVJTSU9OOiBudW1iZXI7XHJcbiAgICAgICAgR0FfTUVBU1VSRU1FTlRfSUQ6IHN0cmluZztcclxuICAgICAgICBHQV9DT05UQUlORVJfSUQ6IHN0cmluZztcclxuICAgICAgICBkYXRhTGF5ZXI6IGFueVtdO1xyXG4gICAgfVxyXG59XHJcblxyXG5pbXBvcnQgQ29va2llQmFubmVyIGZyb20gJy4vY29tcG9uZW50cy9jb29raWUtYmFubmVyLmpzJ1xyXG5pbXBvcnQgQ29va2llc1BhZ2UgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZXMtcGFnZS5qcydcclxuaW1wb3J0IGluaXRBbmFseXRpY3MsIHsgc2VuZFBhZ2VWaWV3RXZlbnQsIHNlbmRGaWx0ZXJQYWdlQ3VzdG9tRXZlbnQsIHVwZGF0ZUFuYWx5dGljc1N0b3JhZ2VDb25zZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2FuYWx5dGljcyc7XHJcbmltcG9ydCB7IG5vZGVMaXN0Rm9yRWFjaCB9IGZyb20gJy4vY29tcG9uZW50cy9oZWxwZXJzLmpzJztcclxuXHJcbi8vdG9kbzogY29uc2lzdGVuY3kgaW4gbW9kdWxlL3Byb3RvL2NsYXNzIHN0eWxlXHJcblxyXG4vLyBJbml0aWFsaXNlIGNvb2tpZSBiYW5uZXJcclxuY29uc3QgJGNvb2tpZUJhbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1vZHVsZT1cImdvdnVrLWNvb2tpZS1iYW5uZXJcIl0nKSBhcyBIVE1MRWxlbWVudCB8IG51bGw7XHJcbm5ldyBDb29raWVCYW5uZXIoJGNvb2tpZUJhbm5lcikuaW5pdCgpO1xyXG5cclxuaW5pdEFuYWx5dGljcyh3aW5kb3cuR0FfTUVBU1VSRU1FTlRfSUQpO1xyXG5cclxuLy90b2RvOiBtb3ZlIHRoaXMgaW50byBzY3JpcHRzIHNlY3Rpb24gb24gY29va2llIHBhZ2VcclxuLy8gSW5pdGlhbGlzZSBjb29raWUgcGFnZVxyXG52YXIgJGNvb2tpZXNQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiYXBwLWNvb2tpZXMtcGFnZVwiXScpXHJcbm5ldyBDb29raWVzUGFnZSgkY29va2llc1BhZ2UpLmluaXQoKVxyXG5cclxuLy90b2RvOiBtb3ZlIGludG8gbW9kdWxlXHJcbmNvbnN0IGJhY2tMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYXBwLWJhY2stbGlua1wiKTtcclxubm9kZUxpc3RGb3JFYWNoKGJhY2tMaW5rcywgKGxpbms6IEhUTUxBbmNob3JFbGVtZW50KSA9PiB7XHJcbiAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuY29uc3QgYnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ29wZW4tY2xvc2UtZmlsdGVycycpO1xyXG5idXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcclxuICAgIGNvbnN0IGZpbHRlckJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyc1wiKSBhcyBIVE1MRGl2RWxlbWVudCB8IG51bGw7XHJcbiAgICBpZiAoZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiKSB7XHJcbiAgICAgICAgZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZpbHRlckJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=\n"]}