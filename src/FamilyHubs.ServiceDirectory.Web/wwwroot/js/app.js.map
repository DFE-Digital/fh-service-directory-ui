{"version":3,"sources":["tmp/js/components/analytics.js","tmp/js/components/cookie-functions.js","tmp/js/components/helpers.js","tmp/js/components/cookie-banner.js","tmp/js/components/cookies-page.js","tmp/js/app.js"],"names":["gtag","command","args","window","dataLayer","push","arguments","Analytics","constructor","gaMeasurementId","Boolean","this","loadGaScript","Date","pageViewParams","getPiiSafePageView","send_page_view","page_path","page_location","page_referrer","referrer","f","document","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","pageView","page_title","title","send_to","referrerUrl","URL","piiSafeReferrerQueryString","getPiiSafeQueryString","search","urlArray","split","piiSafeQueryString","location","href","pathname","queryString","queryParams","URLSearchParams","postcode","get","replace","set","delete","toString","CONSENT_COOKIE_NAME","COOKIE_CATEGORIES","analytics","GA_CONTAINER_ID","essential","DEFAULT_COOKIE_CONSENT","Cookie","name","value","options","getCookie","deleteCookie","days","setCookie","getConsentCookie","consentCookieObj","consentCookie","JSON","parse","err","isValidConsentCookie","version","GDS_CONSENT_COOKIE_VERSION","setConsentCookie","cookieConsent","option","stringify","resetCookies","cookieType","GA_MEASUREMENT_ID","forEach","cookie","userAllowsCookieCategory","cookieCategory","cookiePreferences","e","console","error","userAllowsCookie","cookieName","category","indexOf","nameEQ","cookies","i","len","length","charAt","substring","decodeURIComponent","cookieString","date","setTime","getTime","toUTCString","protocol","hostname","nodeListForEach","nodes","callback","NodeList","prototype","call","cookieBannerAcceptSelector","cookieBannerRejectSelector","cookieBannerHideButtonSelector","cookieMessageSelector","cookieConfirmationAcceptSelector","cookieConfirmationRejectSelector","CookieBanner","$module","CookiesPage","init","$cookieBanner","$acceptButton","querySelector","$rejectButton","$cookieMessage","$cookieConfirmationAccept","$cookieConfirmationReject","$cookieBannerHideButtons","querySelectorAll","onCookiesPage","currentConsentCookie","CookieFunctions.getConsentCookie","CookieFunctions.isValidConsentCookie","CookieFunctions.resetCookies","removeAttribute","addEventListener","acceptCookies","bind","rejectCookies","$cookieBannerHideButton","hideBanner","setAttribute","CookieFunctions.setConsentCookie","revealConfirmationMessage","confirmationMessage","getAttribute","focus","$cookiePage","$cookieForm","$cookieFormFieldsets","$successNotification","$successLink","$cookieFormFieldset","showUserPreference","savePreferences","event","preventDefault","preferences","getCookieType","selectedItem","showSuccessNotification","preference","undefined","radioValue","checked","scrollTo","id","userConsent","$cookiesPage","backLinks","link","history","back","button","getElementById","filterButton","style","display"],"mappings":"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","file":"app.js","sourcesContent":["function gtag(command, ...args) {\n    window.dataLayer.push(arguments);\n}\n//todo: just a module, rather than a class\nexport default class Analytics {\n    constructor(gaMeasurementId) {\n        // if the environment doesn't have a measurement id, don't load analytics\n        if (!Boolean(gaMeasurementId)) {\n            return;\n        }\n        this.loadGaScript(gaMeasurementId);\n        window.dataLayer = window.dataLayer || [];\n        //    function gtag() { dataLayer.push(arguments); }\n        gtag('js', new Date());\n        const pageViewParams = this.getPiiSafePageView(gaMeasurementId);\n        // set the config for auto generated events other than page_view\n        gtag('config', gaMeasurementId, {\n            send_page_view: false,\n            page_path: pageViewParams.page_path,\n            page_location: pageViewParams.page_location,\n            page_referrer: pageViewParams.referrer\n        });\n        // send the page_view event manually (https://developers.google.com/analytics/devguides/collection/gtagjs/pages#default_behavior)\n        gtag('event', 'page_view', this.getPiiSafePageView(gaMeasurementId));\n    }\n    loadGaScript(gaMeasurementId) {\n        const f = document.getElementsByTagName('script')[0];\n        const j = document.createElement('script');\n        j.async = true;\n        j.src = 'https://www.googletagmanager.com/gtag/js?id=' + gaMeasurementId;\n        f.parentNode.insertBefore(j, f);\n    }\n    getPiiSafePageView(gaMeasurementId) {\n        //todo: ConfigParams interface\n        const pageView = {\n            page_title: document.title,\n            send_to: gaMeasurementId,\n            referrer: '',\n            page_location: '',\n            page_path: ''\n        };\n        //todo: set as referrer or page_referrer in pageView - does it matter? is it only picking it up from the config?\n        //todo: get piisafe referrer function\n        if (document.referrer !== '') {\n            const referrerUrl = new URL(document.referrer);\n            const piiSafeReferrerQueryString = this.getPiiSafeQueryString(referrerUrl.search);\n            if (piiSafeReferrerQueryString == null) {\n                pageView.referrer = document.referrer;\n            }\n            else {\n                const urlArray = document.referrer.split(\"?\");\n                pageView.referrer = urlArray[0] + piiSafeReferrerQueryString;\n            }\n        }\n        const piiSafeQueryString = this.getPiiSafeQueryString(window.location.search);\n        if (piiSafeQueryString == null) {\n            pageView.page_location = window.location.href;\n            pageView.page_path = window.location.pathname + window.location.search;\n            return pageView;\n        }\n        const urlArray = window.location.href.split(\"?\");\n        pageView.page_location = urlArray[0] + piiSafeQueryString;\n        pageView.page_path = window.location.pathname + piiSafeQueryString;\n        return pageView;\n    }\n    getPiiSafeQueryString(queryString) {\n        //todo: for safety, convert to lowercase, so that if the user changes the case of the url, we still don't collect pii\n        const queryParams = new URLSearchParams(queryString);\n        let postcode = queryParams.get(\"postcode\");\n        if (postcode == null) {\n            // null indicates original query params were already pii safe\n            return null;\n        }\n        postcode = postcode.replace(/[a-zA-Z]+$/, \"\");\n        queryParams.set(\"postcode\", postcode);\n        queryParams.delete(\"latitude\");\n        queryParams.delete(\"longitude\");\n        return '?' + queryParams.toString();\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\n * Cookie functions\n * ================\n *\n * Used by the cookie banner component and cookies page pattern.\n *\n * Includes function `Cookie()` for getting, setting, and deleting cookies, and\n * functions to manage the users' consent to cookies.\n *\n * Note: there is an inline script in cookie-banner.njk to show the banner\n * as soon as possible, to avoid a high Cumulative Layout Shift (CLS) score.\n * The consent cookie version is defined in cookie-banner.njk\n */\nimport Analytics from './analytics.js';\n/* Name of the cookie to save users cookie preferences to. */\nvar CONSENT_COOKIE_NAME = 'service_directory_cookies_policy';\n/* Users can (dis)allow different groups of cookies. */\nvar COOKIE_CATEGORIES = {\n    analytics: ['_ga', '_ga_' + window.GA_CONTAINER_ID],\n    /* Essential cookies\n     *\n     * Essential cookies cannot be deselected, but we want our cookie code to\n     * only allow adding cookies that are documented in this object, so they need\n     * to be added here.\n     */\n    essential: ['service_directory_cookies_policy']\n};\n/*\n * Default cookie preferences if user has no cookie preferences.\n *\n * Note that this doesn't include a key for essential cookies, essential\n * cookies cannot be disallowed. If the object contains { essential: false }\n * this will be ignored.\n */\nvar DEFAULT_COOKIE_CONSENT = {\n    analytics: false\n};\n/*\n * Set, get, and delete cookies.\n *\n * Usage:\n *\n *   Setting a cookie:\n *   Cookie('hobnob', 'tasty', { days: 30 })\n *\n *   Reading a cookie:\n *   Cookie('hobnob')\n *\n *   Deleting a cookie:\n *   Cookie('hobnob', null)\n */\nexport function Cookie(name, value, options) {\n    if (typeof value !== 'undefined') {\n        if (value === false || value === null) {\n            deleteCookie(name);\n        }\n        else {\n            // Default expiry date of 30 days\n            if (typeof options === 'undefined') {\n                options = { days: 30 };\n            }\n            setCookie(name, value, options);\n        }\n    }\n    else {\n        return getCookie(name);\n    }\n}\n/** Return the user's cookie preferences.\n *\n * If the consent cookie is malformed, or not present,\n * returns null.\n */\nexport function getConsentCookie() {\n    var consentCookie = getCookie(CONSENT_COOKIE_NAME);\n    var consentCookieObj;\n    if (consentCookie) {\n        try {\n            consentCookieObj = JSON.parse(consentCookie);\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n    return consentCookieObj;\n}\n/** Check the cookie preferences object.\n *\n * If the consent object is not present, malformed, or incorrect version,\n * returns false, otherwise returns true.\n *\n * This is also duplicated in cookie-banner.njk - the two need to be kept in sync\n */\nexport function isValidConsentCookie(options) {\n    return (options && options.version >= window.GDS_CONSENT_COOKIE_VERSION);\n}\n/** Update the user's cookie preferences. */\nexport function setConsentCookie(options) {\n    var cookieConsent = getConsentCookie();\n    if (!cookieConsent) {\n        cookieConsent = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    // Merge current cookie preferences and new preferences\n    for (var option in options) {\n        cookieConsent[option] = options[option];\n    }\n    // Essential cookies cannot be deselected, ignore this cookie type\n    delete cookieConsent.essential;\n    cookieConsent.version = window.GDS_CONSENT_COOKIE_VERSION;\n    // Set the consent cookie\n    setCookie(CONSENT_COOKIE_NAME, JSON.stringify(cookieConsent), { days: 365 });\n    // Update the other cookies\n    resetCookies();\n}\n/** Apply the user's cookie preferences\n *\n * Deletes any cookies the user has not consented to.\n */\nexport function resetCookies() {\n    var options = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(options)) {\n        options = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    for (var cookieType in options) {\n        if (cookieType === 'version') {\n            continue;\n        }\n        // Essential cookies cannot be deselected, ignore this cookie type\n        if (cookieType === 'essential') {\n            continue;\n        }\n        //todo: enabling analytics doesn't belong in resetCookies\n        const analyticsAllowed = (cookieType === 'analytics' && options[cookieType]);\n        if (analyticsAllowed) {\n            const analytics = new Analytics(window.GA_MEASUREMENT_ID);\n        }\n        if (!options[cookieType]) {\n            // Fetch the cookies in that category\n            var cookiesInCategory = COOKIE_CATEGORIES[cookieType];\n            cookiesInCategory.forEach(function (cookie) {\n                // Delete cookie\n                Cookie(cookie, null);\n            });\n        }\n    }\n}\nfunction userAllowsCookieCategory(cookieCategory, cookiePreferences) {\n    // Essential cookies are always allowed\n    if (cookieCategory === 'essential') {\n        return true;\n    }\n    // Sometimes cookiePreferences is malformed in some of the tests, so we need to handle these\n    try {\n        return cookiePreferences[cookieCategory];\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n}\nfunction userAllowsCookie(cookieName) {\n    // Always allow setting the consent cookie\n    if (cookieName === CONSENT_COOKIE_NAME) {\n        return true;\n    }\n    // Get the current cookie preferences\n    var cookiePreferences = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(cookiePreferences)) {\n        cookiePreferences = DEFAULT_COOKIE_CONSENT;\n    }\n    for (var category in COOKIE_CATEGORIES) {\n        var cookiesInCategory = COOKIE_CATEGORIES[category];\n        if (cookiesInCategory.indexOf(cookieName) !== '-1') {\n            return userAllowsCookieCategory(category, cookiePreferences);\n        }\n    }\n    // Deny the cookie if it is not known to us\n    return false;\n}\nfunction getCookie(name) {\n    var nameEQ = name + '=';\n    var cookies = document.cookie.split(';');\n    for (var i = 0, len = cookies.length; i < len; i++) {\n        var cookie = cookies[i];\n        while (cookie.charAt(0) === ' ') {\n            cookie = cookie.substring(1, cookie.length);\n        }\n        if (cookie.indexOf(nameEQ) === 0) {\n            return decodeURIComponent(cookie.substring(nameEQ.length));\n        }\n    }\n    return null;\n}\n// do we need to set the domain?\nfunction setCookie(name, value, options) {\n    if (userAllowsCookie(name)) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        var cookieString = name + '=' + value + '; path=/; SameSite=Strict';\n        if (options.days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (options.days * 24 * 60 * 60 * 1000));\n            cookieString = cookieString + '; expires=' + date.toUTCString();\n        }\n        if (document.location.protocol === 'https:') {\n            cookieString = cookieString + '; Secure';\n        }\n        document.cookie = cookieString;\n    }\n}\nfunction deleteCookie(name) {\n    if (Cookie(name)) {\n        // Cookies need to be deleted in the same level of specificity in which they were set\n        // If a cookie was set with a specified domain, it needs to be specified when deleted\n        // If a cookie wasn't set with the domain attribute, it shouldn't be there when deleted\n        // You can't tell if a cookie was set with a domain attribute or not, so try both options\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + window.location.hostname + ';path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=.' + window.location.hostname + ';path=/';\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/**\n * This seems to fail in IE8, requires more investigation.\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\n */\nfunction nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n        return nodes.forEach(callback);\n    }\n    for (var i = 0; i < nodes.length; i++) {\n        callback.call(window, nodes[i], i, nodes);\n    }\n}\nexport { nodeListForEach };\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaGVscGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFDSCxTQUFTLGVBQWUsQ0FBQyxLQUFLLEVBQUUsUUFBUTtJQUNwQyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7S0FDakM7SUFDRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNuQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFBO0tBQzVDO0FBQ0wsQ0FBQztBQUVELE9BQU8sRUFDSCxlQUFlLEVBQ2xCLENBQUEiLCJmaWxlIjoiY29tcG9uZW50cy9oZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoaXMgc2VlbXMgdG8gZmFpbCBpbiBJRTgsIHJlcXVpcmVzIG1vcmUgaW52ZXN0aWdhdGlvbi5cclxuICogU2VlOiBodHRwczovL2dpdGh1Yi5jb20vaW1hZ2l0YW1hL25vZGVsaXN0LWZvcmVhY2gtcG9seWZpbGxcclxuICovXHJcbmZ1bmN0aW9uIG5vZGVMaXN0Rm9yRWFjaChub2RlcywgY2FsbGJhY2spIHtcclxuICAgIGlmICh3aW5kb3cuTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcclxuICAgICAgICByZXR1cm4gbm9kZXMuZm9yRWFjaChjYWxsYmFjaylcclxuICAgIH1cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjYWxsYmFjay5jYWxsKHdpbmRvdywgbm9kZXNbaV0sIGksIG5vZGVzKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge1xyXG4gICAgbm9kZUxpc3RGb3JFYWNoXHJcbn0iXX0=\n","import * as CookieFunctions from './cookie-functions.js';\n/*todo: we don't meed a pollyfill for bind, as long as we server up the non js version of the site for ie8 (https://caniuse.com/?search=bind) */\n/*import 'govuk-frontend/govuk/vendor/polyfills/Function/prototype/bind'*/\n/*todo: i think we're ok for this too (see above about ie8), but we _might_ need it for >8 ie (use? https://www.npmjs.com/package/events-polyfill)*/\n/*import 'govuk-frontend/govuk/vendor/polyfills/Event'*/\nimport { nodeListForEach } from './helpers.js';\nvar cookieBannerAcceptSelector = '.js-cookie-banner-accept';\nvar cookieBannerRejectSelector = '.js-cookie-banner-reject';\nvar cookieBannerHideButtonSelector = '.js-cookie-banner-hide';\nvar cookieMessageSelector = '.js-cookie-banner-message';\nvar cookieConfirmationAcceptSelector = '.js-cookie-banner-confirmation-accept';\nvar cookieConfirmationRejectSelector = '.js-cookie-banner-confirmation-reject';\nfunction CookieBanner($module) {\n    this.$module = $module;\n}\nCookieBanner.prototype.init = function () {\n    this.$cookieBanner = this.$module;\n    this.$acceptButton = this.$module.querySelector(cookieBannerAcceptSelector);\n    this.$rejectButton = this.$module.querySelector(cookieBannerRejectSelector);\n    this.$cookieMessage = this.$module.querySelector(cookieMessageSelector);\n    this.$cookieConfirmationAccept = this.$module.querySelector(cookieConfirmationAcceptSelector);\n    this.$cookieConfirmationReject = this.$module.querySelector(cookieConfirmationRejectSelector);\n    this.$cookieBannerHideButtons = this.$module.querySelectorAll(cookieBannerHideButtonSelector);\n    // Exit if no cookie banner module\n    // or if we're on the cookies page to avoid circular journeys\n    if (!this.$cookieBanner || this.onCookiesPage()) {\n        return;\n    }\n    // Show the cookie banner to users who have not consented or have an\n    // outdated consent cookie\n    var currentConsentCookie = CookieFunctions.getConsentCookie();\n    if (!currentConsentCookie || !CookieFunctions.isValidConsentCookie(currentConsentCookie)) {\n        // If the consent cookie version is not valid, we need to remove any cookies which have been\n        // set previously\n        CookieFunctions.resetCookies();\n        this.$cookieBanner.removeAttribute('hidden');\n    }\n    this.$acceptButton.addEventListener('click', this.acceptCookies.bind(this));\n    this.$rejectButton.addEventListener('click', this.rejectCookies.bind(this));\n    nodeListForEach(this.$cookieBannerHideButtons, function ($cookieBannerHideButton) {\n        $cookieBannerHideButton.addEventListener('click', this.hideBanner.bind(this));\n    }.bind(this));\n};\nCookieBanner.prototype.hideBanner = function () {\n    this.$cookieBanner.setAttribute('hidden', true);\n};\nCookieBanner.prototype.acceptCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: true });\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationAccept);\n};\nCookieBanner.prototype.rejectCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: false });\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationReject);\n};\nCookieBanner.prototype.revealConfirmationMessage = function (confirmationMessage) {\n    confirmationMessage.removeAttribute('hidden');\n    // Set tabindex to -1 to make the confirmation banner focusable with JavaScript\n    if (!confirmationMessage.getAttribute('tabindex')) {\n        confirmationMessage.setAttribute('tabindex', '-1');\n        confirmationMessage.addEventListener('blur', function () {\n            confirmationMessage.removeAttribute('tabindex');\n        });\n    }\n    confirmationMessage.focus();\n};\nCookieBanner.prototype.onCookiesPage = function () {\n    return window.location.pathname === '/cookies/';\n};\nexport default CookieBanner;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import { getConsentCookie, setConsentCookie } from './cookie-functions.js';\nimport { nodeListForEach } from './helpers.js';\nfunction CookiesPage($module) {\n    this.$module = $module;\n}\nCookiesPage.prototype.init = function () {\n    this.$cookiePage = this.$module;\n    if (!this.$cookiePage) {\n        return;\n    }\n    this.$cookieForm = this.$cookiePage.querySelector('.js-cookies-page-form');\n    this.$cookieFormFieldsets = this.$cookieForm.querySelectorAll('.js-cookies-page-form-fieldset');\n    this.$successNotification = this.$cookiePage.querySelector('.js-cookies-page-success');\n    this.$successLink = this.$cookiePage.querySelector('.js-cookies-page-success-link');\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        this.showUserPreference($cookieFormFieldset, getConsentCookie());\n        /*        $cookieFormFieldset.removeAttribute('hidden')*/\n    }.bind(this));\n    // Show submit button\n    //this.$cookieForm.querySelector('.js-cookies-form-button').removeAttribute('hidden')\n    this.$cookieForm.addEventListener('submit', this.savePreferences.bind(this));\n};\nCookiesPage.prototype.savePreferences = function (event) {\n    // Stop default form submission behaviour\n    event.preventDefault();\n    var preferences = {};\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        var cookieType = this.getCookieType($cookieFormFieldset);\n        var selectedItem = $cookieFormFieldset.querySelector('input[name=' + cookieType + ']:checked').value;\n        preferences[cookieType] = selectedItem === 'true';\n    }.bind(this));\n    // Save preferences to cookie and show success notification\n    setConsentCookie(preferences);\n    // handle the corner case, where the user has selected their preference on the cookie page, whilst the banner is still open as they haven't previously selected their preference\n    //todo: call hideBanner\n    var banner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    banner.setAttribute('hidden', 'true');\n    this.showSuccessNotification();\n};\nCookiesPage.prototype.showUserPreference = function ($cookieFormFieldset, preferences) {\n    var cookieType = this.getCookieType($cookieFormFieldset);\n    var preference = false;\n    if (cookieType && preferences && preferences[cookieType] !== undefined) {\n        preference = preferences[cookieType];\n    }\n    var radioValue = preference ? 'true' : 'false';\n    var radio = $cookieFormFieldset.querySelector('input[name=' + cookieType + '][value=' + radioValue + ']');\n    radio.checked = true;\n};\nCookiesPage.prototype.showSuccessNotification = function () {\n    this.$successNotification.removeAttribute('hidden');\n    // if the user's come to the cookies page through the link in the cookie banner, show a link to take them back to the page they came from\n    var referrer = document.referrer ? new URL(document.referrer).pathname : false;\n    if (referrer && referrer !== document.location.pathname) {\n        this.$successLink.href = referrer;\n        this.$successLink.removeAttribute('hidden');\n    }\n    else {\n        this.$successLink.setAttribute('hidden', 'true');\n    }\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // GOV.UK Frontend will remove the tabindex on blur as the component doesn't\n    // need to be focusable after the user has read the text.\n    if (!this.$successNotification.getAttribute('tabindex')) {\n        this.$successNotification.setAttribute('tabindex', '-1');\n    }\n    this.$successNotification.focus();\n    // scroll to the top of the page\n    window.scrollTo(0, 0);\n};\nCookiesPage.prototype.getCookieType = function ($cookieFormFieldset) {\n    return $cookieFormFieldset.id;\n};\nexport default CookiesPage;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// js components have been snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/\nimport CookieBanner from './components/cookie-banner.js';\nimport { getConsentCookie, isValidConsentCookie } from './components/cookie-functions.js';\nimport CookiesPage from './components/cookies-page.js';\nimport Analytics from './components/analytics';\n// Initialise cookie banner\nvar $cookieBanner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\nnew CookieBanner($cookieBanner).init();\n// Initialise analytics if consent is given\nvar userConsent = getConsentCookie();\nif (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics) {\n    const analytics = new Analytics(window.GA_MEASUREMENT_ID);\n}\n//todo: move this into scripts section on cookie page\n// Initialise cookie page\nvar $cookiesPage = document.querySelector('[data-module=\"app-cookies-page\"]');\nnew CookiesPage($cookiesPage).init();\nconst backLinks = document.querySelectorAll(\".app-back-link\");\nbackLinks.forEach((link) => {\n    link.addEventListener(\"click\", () => {\n        window.history.back();\n    });\n});\nconst button = document.getElementById('open-close-filters');\nbutton === null || button === void 0 ? void 0 : button.addEventListener('click', function handleClick(event) {\n    //todo: update to ts 2?\n    const filterButton = document.getElementById(\"filters\");\n    if (filterButton.style.display === \"none\") {\n        filterButton.style.display = \"block\";\n    }\n    else {\n        filterButton.style.display = \"none\";\n    }\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4SEFBOEg7QUFXOUgsT0FBTyxZQUFZLE1BQU0sK0JBQStCLENBQUE7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFDekYsT0FBTyxXQUFXLE1BQU0sOEJBQThCLENBQUE7QUFDdEQsT0FBTyxTQUFTLE1BQU0sd0JBQXdCLENBQUM7QUFFL0MsMkJBQTJCO0FBQzNCLElBQUksYUFBYSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMscUNBQXFDLENBQUMsQ0FBQTtBQUNqRixJQUFJLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtBQUV0QywyQ0FBMkM7QUFDM0MsSUFBSSxXQUFXLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztBQUNyQyxJQUFJLFdBQVcsSUFBSSxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFO0lBQzNFLE1BQU0sU0FBUyxHQUFHLElBQUksU0FBUyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0NBQzdEO0FBRUQscURBQXFEO0FBQ3JELHlCQUF5QjtBQUN6QixJQUFJLFlBQVksR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGtDQUFrQyxDQUFDLENBQUE7QUFDN0UsSUFBSSxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUE7QUFFcEMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDOUQsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQXVCLEVBQUUsRUFBRTtJQUMxQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUNoQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFCLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDN0QsTUFBTSxhQUFOLE1BQU0sdUJBQU4sTUFBTSxDQUFFLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxTQUFTLFdBQVcsQ0FBQyxLQUFLO0lBQ3hELHVCQUF1QjtJQUN2QixNQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBMEIsQ0FBQztJQUNqRixJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsT0FBTyxLQUFLLE1BQU0sRUFBRTtRQUN2QyxZQUFZLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7S0FDeEM7U0FBTTtRQUNILFlBQVksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztLQUN2QztBQUNMLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGpzIGNvbXBvbmVudHMgaGF2ZSBiZWVuIHNuYWZmbGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2FscGhhZ292L2dvdnVrLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYWluL3NyYy9qYXZhc2NyaXB0cy9jb21wb25lbnRzL1xyXG5cclxuZGVjbGFyZSBnbG9iYWwge1xyXG4gICAgaW50ZXJmYWNlIFdpbmRvdyB7XHJcbiAgICAgICAgR0RTX0NPTlNFTlRfQ09PS0lFX1ZFUlNJT046IG51bWJlcjtcclxuICAgICAgICBHQV9NRUFTVVJFTUVOVF9JRDogc3RyaW5nO1xyXG4gICAgICAgIEdBX0NPTlRBSU5FUl9JRDogc3RyaW5nO1xyXG4gICAgICAgIGRhdGFMYXllcjogYW55W107XHJcbiAgICB9XHJcbn1cclxuXHJcbmltcG9ydCBDb29raWVCYW5uZXIgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZS1iYW5uZXIuanMnXHJcbmltcG9ydCB7IGdldENvbnNlbnRDb29raWUsIGlzVmFsaWRDb25zZW50Q29va2llIH0gZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZS1mdW5jdGlvbnMuanMnXHJcbmltcG9ydCBDb29raWVzUGFnZSBmcm9tICcuL2NvbXBvbmVudHMvY29va2llcy1wYWdlLmpzJ1xyXG5pbXBvcnQgQW5hbHl0aWNzIGZyb20gJy4vY29tcG9uZW50cy9hbmFseXRpY3MnO1xyXG5cclxuLy8gSW5pdGlhbGlzZSBjb29raWUgYmFubmVyXHJcbnZhciAkY29va2llQmFubmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiZ292dWstY29va2llLWJhbm5lclwiXScpXHJcbm5ldyBDb29raWVCYW5uZXIoJGNvb2tpZUJhbm5lcikuaW5pdCgpXHJcblxyXG4vLyBJbml0aWFsaXNlIGFuYWx5dGljcyBpZiBjb25zZW50IGlzIGdpdmVuXHJcbnZhciB1c2VyQ29uc2VudCA9IGdldENvbnNlbnRDb29raWUoKTtcclxuaWYgKHVzZXJDb25zZW50ICYmIGlzVmFsaWRDb25zZW50Q29va2llKHVzZXJDb25zZW50KSAmJiB1c2VyQ29uc2VudC5hbmFseXRpY3MpIHtcclxuICAgIGNvbnN0IGFuYWx5dGljcyA9IG5ldyBBbmFseXRpY3Mod2luZG93LkdBX01FQVNVUkVNRU5UX0lEKTtcclxufVxyXG5cclxuLy90b2RvOiBtb3ZlIHRoaXMgaW50byBzY3JpcHRzIHNlY3Rpb24gb24gY29va2llIHBhZ2VcclxuLy8gSW5pdGlhbGlzZSBjb29raWUgcGFnZVxyXG52YXIgJGNvb2tpZXNQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiYXBwLWNvb2tpZXMtcGFnZVwiXScpXHJcbm5ldyBDb29raWVzUGFnZSgkY29va2llc1BhZ2UpLmluaXQoKVxyXG5cclxuY29uc3QgYmFja0xpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hcHAtYmFjay1saW5rXCIpO1xyXG5iYWNrTGlua3MuZm9yRWFjaCgobGluazogSFRNTEFuY2hvckVsZW1lbnQpID0+IHtcclxuICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5jb25zdCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3Blbi1jbG9zZS1maWx0ZXJzJyk7XHJcbmJ1dHRvbj8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCkge1xyXG4gICAgLy90b2RvOiB1cGRhdGUgdG8gdHMgMj9cclxuICAgIGNvbnN0IGZpbHRlckJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyc1wiKSBhcyBIVE1MRGl2RWxlbWVudCB8IG51bGw7XHJcbiAgICBpZiAoZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiKSB7XHJcbiAgICAgICAgZmlsdGVyQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZpbHRlckJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=\n"]}