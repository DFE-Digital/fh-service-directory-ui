@model IFilter

<div class="govuk-form-group app-filter-group">
    <fieldset class="govuk-fieldset">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
            @Model.Description
        </legend>
        @switch (Model.FilterType)
        {
            case FilterType.Checkboxes:
                <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
                    @foreach (var aspect in Model.Aspects)
                    {
                        string checkboxId = $"{Model.Name}-{aspect.Value}";
                        <div class="govuk-checkboxes__item">
                            <input class="govuk-checkboxes__input" id="@checkboxId" name="@Model.Name" type="checkbox" value="@aspect.Value"
                                   @if (Model.IsSelected(aspect))
                                   {
                                       @:checked
                                   }>
                            <label class="govuk-label govuk-checkboxes__label" for="@checkboxId">
                                @aspect.Description
                            </label>
                        </div>
                    }
                </div>
                break;
            case FilterType.Radios:
                <div class="govuk-radios govuk-radios--small" data-module="govuk-radios">
                    @foreach (var aspect in Model.Aspects)
                    {
                        string radioId = $"{Model.Name}-{aspect.Value}";
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="@radioId" name="@Model.Name" type="radio" value="@aspect.Value"
                               @if (Model.IsSelected(aspect))
                               {
                                   @:checked
                               }>

                            <label class="govuk-label govuk-radios__label" for="@radioId">
                                @aspect.Description
                            </label>
                        </div>
                    }
                </div>
                break;
            case FilterType.Select:
                IFilterOptionalSelect filterOptionalSelect = (IFilterOptionalSelect) Model;
                <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
                    <div class="govuk-checkboxes__item">
                        <input class="govuk-checkboxes__input" id="@(filterOptionalSelect.OptionSelectedName)" name="@(filterOptionalSelect.OptionSelectedName)" type="checkbox" value="true" data-aria-controls="@(filterOptionalSelect.Name)-conditional"
                               @if (filterOptionalSelect.IsOptionSelected)
                               {
                                   @:checked
                               }>
                        <label class="govuk-label govuk-checkboxes__label" for="@(filterOptionalSelect.OptionSelectedName)">
                            @filterOptionalSelect.OptionDescription
                        </label>
                    </div>
                    <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="@(filterOptionalSelect.Name)-conditional">

                        <div class="govuk-form-group">
                            <label class="govuk-label" for="@(filterOptionalSelect.Name)-select">
                                @filterOptionalSelect.SelectDescription
                            </label>
                            <select class="govuk-select" id="@(filterOptionalSelect.Name)-select" name="@filterOptionalSelect.Name">
                                @foreach (var aspect in filterOptionalSelect.Aspects)
                                {
                                    <!option value="@aspect.Value" @(filterOptionalSelect.IsSelected(aspect)?"selected":"")>@aspect.Description</!option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                break;
        }
    </fieldset>
</div>
